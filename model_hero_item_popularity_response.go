/*
OpenDota API

# Introduction The OpenDota API provides Dota 2 related data including advanced match data extracted from match replays.  You can find data that can be used to convert hero and ability IDs and other information provided by the API from the [dotaconstants](https://github.com/odota/dotaconstants) repository.  Without a key, you can make 2,000 free calls per day at a rate limit of 60 requests/minute. We also offer a Premium Tier with unlimited API calls and higher rate limits. Check out the [API page](https://www.opendota.com/api-keys) to learn more.     

API version: 25.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the HeroItemPopularityResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HeroItemPopularityResponse{}

// HeroItemPopularityResponse struct for HeroItemPopularityResponse
type HeroItemPopularityResponse struct {
	StartGameItems *HeroItemPopularityResponseStartGameItems `json:"start_game_items,omitempty"`
	EarlyGameItems *HeroItemPopularityResponseEarlyGameItems `json:"early_game_items,omitempty"`
	MidGameItems *HeroItemPopularityResponseMidGameItems `json:"mid_game_items,omitempty"`
	LateGameItems *HeroItemPopularityResponseLateGameItems `json:"late_game_items,omitempty"`
}

// NewHeroItemPopularityResponse instantiates a new HeroItemPopularityResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHeroItemPopularityResponse() *HeroItemPopularityResponse {
	this := HeroItemPopularityResponse{}
	return &this
}

// NewHeroItemPopularityResponseWithDefaults instantiates a new HeroItemPopularityResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHeroItemPopularityResponseWithDefaults() *HeroItemPopularityResponse {
	this := HeroItemPopularityResponse{}
	return &this
}

// GetStartGameItems returns the StartGameItems field value if set, zero value otherwise.
func (o *HeroItemPopularityResponse) GetStartGameItems() HeroItemPopularityResponseStartGameItems {
	if o == nil || IsNil(o.StartGameItems) {
		var ret HeroItemPopularityResponseStartGameItems
		return ret
	}
	return *o.StartGameItems
}

// GetStartGameItemsOk returns a tuple with the StartGameItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroItemPopularityResponse) GetStartGameItemsOk() (*HeroItemPopularityResponseStartGameItems, bool) {
	if o == nil || IsNil(o.StartGameItems) {
		return nil, false
	}
	return o.StartGameItems, true
}

// HasStartGameItems returns a boolean if a field has been set.
func (o *HeroItemPopularityResponse) HasStartGameItems() bool {
	if o != nil && !IsNil(o.StartGameItems) {
		return true
	}

	return false
}

// SetStartGameItems gets a reference to the given HeroItemPopularityResponseStartGameItems and assigns it to the StartGameItems field.
func (o *HeroItemPopularityResponse) SetStartGameItems(v HeroItemPopularityResponseStartGameItems) {
	o.StartGameItems = &v
}

// GetEarlyGameItems returns the EarlyGameItems field value if set, zero value otherwise.
func (o *HeroItemPopularityResponse) GetEarlyGameItems() HeroItemPopularityResponseEarlyGameItems {
	if o == nil || IsNil(o.EarlyGameItems) {
		var ret HeroItemPopularityResponseEarlyGameItems
		return ret
	}
	return *o.EarlyGameItems
}

// GetEarlyGameItemsOk returns a tuple with the EarlyGameItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroItemPopularityResponse) GetEarlyGameItemsOk() (*HeroItemPopularityResponseEarlyGameItems, bool) {
	if o == nil || IsNil(o.EarlyGameItems) {
		return nil, false
	}
	return o.EarlyGameItems, true
}

// HasEarlyGameItems returns a boolean if a field has been set.
func (o *HeroItemPopularityResponse) HasEarlyGameItems() bool {
	if o != nil && !IsNil(o.EarlyGameItems) {
		return true
	}

	return false
}

// SetEarlyGameItems gets a reference to the given HeroItemPopularityResponseEarlyGameItems and assigns it to the EarlyGameItems field.
func (o *HeroItemPopularityResponse) SetEarlyGameItems(v HeroItemPopularityResponseEarlyGameItems) {
	o.EarlyGameItems = &v
}

// GetMidGameItems returns the MidGameItems field value if set, zero value otherwise.
func (o *HeroItemPopularityResponse) GetMidGameItems() HeroItemPopularityResponseMidGameItems {
	if o == nil || IsNil(o.MidGameItems) {
		var ret HeroItemPopularityResponseMidGameItems
		return ret
	}
	return *o.MidGameItems
}

// GetMidGameItemsOk returns a tuple with the MidGameItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroItemPopularityResponse) GetMidGameItemsOk() (*HeroItemPopularityResponseMidGameItems, bool) {
	if o == nil || IsNil(o.MidGameItems) {
		return nil, false
	}
	return o.MidGameItems, true
}

// HasMidGameItems returns a boolean if a field has been set.
func (o *HeroItemPopularityResponse) HasMidGameItems() bool {
	if o != nil && !IsNil(o.MidGameItems) {
		return true
	}

	return false
}

// SetMidGameItems gets a reference to the given HeroItemPopularityResponseMidGameItems and assigns it to the MidGameItems field.
func (o *HeroItemPopularityResponse) SetMidGameItems(v HeroItemPopularityResponseMidGameItems) {
	o.MidGameItems = &v
}

// GetLateGameItems returns the LateGameItems field value if set, zero value otherwise.
func (o *HeroItemPopularityResponse) GetLateGameItems() HeroItemPopularityResponseLateGameItems {
	if o == nil || IsNil(o.LateGameItems) {
		var ret HeroItemPopularityResponseLateGameItems
		return ret
	}
	return *o.LateGameItems
}

// GetLateGameItemsOk returns a tuple with the LateGameItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroItemPopularityResponse) GetLateGameItemsOk() (*HeroItemPopularityResponseLateGameItems, bool) {
	if o == nil || IsNil(o.LateGameItems) {
		return nil, false
	}
	return o.LateGameItems, true
}

// HasLateGameItems returns a boolean if a field has been set.
func (o *HeroItemPopularityResponse) HasLateGameItems() bool {
	if o != nil && !IsNil(o.LateGameItems) {
		return true
	}

	return false
}

// SetLateGameItems gets a reference to the given HeroItemPopularityResponseLateGameItems and assigns it to the LateGameItems field.
func (o *HeroItemPopularityResponse) SetLateGameItems(v HeroItemPopularityResponseLateGameItems) {
	o.LateGameItems = &v
}

func (o HeroItemPopularityResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HeroItemPopularityResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StartGameItems) {
		toSerialize["start_game_items"] = o.StartGameItems
	}
	if !IsNil(o.EarlyGameItems) {
		toSerialize["early_game_items"] = o.EarlyGameItems
	}
	if !IsNil(o.MidGameItems) {
		toSerialize["mid_game_items"] = o.MidGameItems
	}
	if !IsNil(o.LateGameItems) {
		toSerialize["late_game_items"] = o.LateGameItems
	}
	return toSerialize, nil
}

type NullableHeroItemPopularityResponse struct {
	value *HeroItemPopularityResponse
	isSet bool
}

func (v NullableHeroItemPopularityResponse) Get() *HeroItemPopularityResponse {
	return v.value
}

func (v *NullableHeroItemPopularityResponse) Set(val *HeroItemPopularityResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableHeroItemPopularityResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableHeroItemPopularityResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHeroItemPopularityResponse(val *HeroItemPopularityResponse) *NullableHeroItemPopularityResponse {
	return &NullableHeroItemPopularityResponse{value: val, isSet: true}
}

func (v NullableHeroItemPopularityResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHeroItemPopularityResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


