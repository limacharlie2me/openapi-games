/*
OpenDota API

# Introduction The OpenDota API provides Dota 2 related data including advanced match data extracted from match replays.  You can find data that can be used to convert hero and ability IDs and other information provided by the API from the [dotaconstants](https://github.com/odota/dotaconstants) repository.  Without a key, you can make 2,000 free calls per day at a rate limit of 60 requests/minute. We also offer a Premium Tier with unlimited API calls and higher rate limits. Check out the [API page](https://www.opendota.com/api-keys) to learn more.     

API version: 25.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ScenarioItemTimingsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ScenarioItemTimingsResponse{}

// ScenarioItemTimingsResponse struct for ScenarioItemTimingsResponse
type ScenarioItemTimingsResponse struct {
	// The ID value of the hero played
	HeroId *int32 `json:"hero_id,omitempty"`
	// Purchased item
	Item *string `json:"item,omitempty"`
	// Ingame time in seconds before the item was purchased
	Time *int32 `json:"time,omitempty"`
	// The number of games where the hero bought this item before this time
	Games *string `json:"games,omitempty"`
	// The number of games won where the hero bought this item before this time
	Wins *string `json:"wins,omitempty"`
}

// NewScenarioItemTimingsResponse instantiates a new ScenarioItemTimingsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScenarioItemTimingsResponse() *ScenarioItemTimingsResponse {
	this := ScenarioItemTimingsResponse{}
	return &this
}

// NewScenarioItemTimingsResponseWithDefaults instantiates a new ScenarioItemTimingsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScenarioItemTimingsResponseWithDefaults() *ScenarioItemTimingsResponse {
	this := ScenarioItemTimingsResponse{}
	return &this
}

// GetHeroId returns the HeroId field value if set, zero value otherwise.
func (o *ScenarioItemTimingsResponse) GetHeroId() int32 {
	if o == nil || IsNil(o.HeroId) {
		var ret int32
		return ret
	}
	return *o.HeroId
}

// GetHeroIdOk returns a tuple with the HeroId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScenarioItemTimingsResponse) GetHeroIdOk() (*int32, bool) {
	if o == nil || IsNil(o.HeroId) {
		return nil, false
	}
	return o.HeroId, true
}

// HasHeroId returns a boolean if a field has been set.
func (o *ScenarioItemTimingsResponse) HasHeroId() bool {
	if o != nil && !IsNil(o.HeroId) {
		return true
	}

	return false
}

// SetHeroId gets a reference to the given int32 and assigns it to the HeroId field.
func (o *ScenarioItemTimingsResponse) SetHeroId(v int32) {
	o.HeroId = &v
}

// GetItem returns the Item field value if set, zero value otherwise.
func (o *ScenarioItemTimingsResponse) GetItem() string {
	if o == nil || IsNil(o.Item) {
		var ret string
		return ret
	}
	return *o.Item
}

// GetItemOk returns a tuple with the Item field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScenarioItemTimingsResponse) GetItemOk() (*string, bool) {
	if o == nil || IsNil(o.Item) {
		return nil, false
	}
	return o.Item, true
}

// HasItem returns a boolean if a field has been set.
func (o *ScenarioItemTimingsResponse) HasItem() bool {
	if o != nil && !IsNil(o.Item) {
		return true
	}

	return false
}

// SetItem gets a reference to the given string and assigns it to the Item field.
func (o *ScenarioItemTimingsResponse) SetItem(v string) {
	o.Item = &v
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *ScenarioItemTimingsResponse) GetTime() int32 {
	if o == nil || IsNil(o.Time) {
		var ret int32
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScenarioItemTimingsResponse) GetTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.Time) {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *ScenarioItemTimingsResponse) HasTime() bool {
	if o != nil && !IsNil(o.Time) {
		return true
	}

	return false
}

// SetTime gets a reference to the given int32 and assigns it to the Time field.
func (o *ScenarioItemTimingsResponse) SetTime(v int32) {
	o.Time = &v
}

// GetGames returns the Games field value if set, zero value otherwise.
func (o *ScenarioItemTimingsResponse) GetGames() string {
	if o == nil || IsNil(o.Games) {
		var ret string
		return ret
	}
	return *o.Games
}

// GetGamesOk returns a tuple with the Games field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScenarioItemTimingsResponse) GetGamesOk() (*string, bool) {
	if o == nil || IsNil(o.Games) {
		return nil, false
	}
	return o.Games, true
}

// HasGames returns a boolean if a field has been set.
func (o *ScenarioItemTimingsResponse) HasGames() bool {
	if o != nil && !IsNil(o.Games) {
		return true
	}

	return false
}

// SetGames gets a reference to the given string and assigns it to the Games field.
func (o *ScenarioItemTimingsResponse) SetGames(v string) {
	o.Games = &v
}

// GetWins returns the Wins field value if set, zero value otherwise.
func (o *ScenarioItemTimingsResponse) GetWins() string {
	if o == nil || IsNil(o.Wins) {
		var ret string
		return ret
	}
	return *o.Wins
}

// GetWinsOk returns a tuple with the Wins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScenarioItemTimingsResponse) GetWinsOk() (*string, bool) {
	if o == nil || IsNil(o.Wins) {
		return nil, false
	}
	return o.Wins, true
}

// HasWins returns a boolean if a field has been set.
func (o *ScenarioItemTimingsResponse) HasWins() bool {
	if o != nil && !IsNil(o.Wins) {
		return true
	}

	return false
}

// SetWins gets a reference to the given string and assigns it to the Wins field.
func (o *ScenarioItemTimingsResponse) SetWins(v string) {
	o.Wins = &v
}

func (o ScenarioItemTimingsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ScenarioItemTimingsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HeroId) {
		toSerialize["hero_id"] = o.HeroId
	}
	if !IsNil(o.Item) {
		toSerialize["item"] = o.Item
	}
	if !IsNil(o.Time) {
		toSerialize["time"] = o.Time
	}
	if !IsNil(o.Games) {
		toSerialize["games"] = o.Games
	}
	if !IsNil(o.Wins) {
		toSerialize["wins"] = o.Wins
	}
	return toSerialize, nil
}

type NullableScenarioItemTimingsResponse struct {
	value *ScenarioItemTimingsResponse
	isSet bool
}

func (v NullableScenarioItemTimingsResponse) Get() *ScenarioItemTimingsResponse {
	return v.value
}

func (v *NullableScenarioItemTimingsResponse) Set(val *ScenarioItemTimingsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableScenarioItemTimingsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableScenarioItemTimingsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScenarioItemTimingsResponse(val *ScenarioItemTimingsResponse) *NullableScenarioItemTimingsResponse {
	return &NullableScenarioItemTimingsResponse{value: val, isSet: true}
}

func (v NullableScenarioItemTimingsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScenarioItemTimingsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


