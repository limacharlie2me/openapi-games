/*
OpenDota API

# Introduction The OpenDota API provides Dota 2 related data including advanced match data extracted from match replays.  You can find data that can be used to convert hero and ability IDs and other information provided by the API from the [dotaconstants](https://github.com/odota/dotaconstants) repository.  Without a key, you can make 2,000 free calls per day at a rate limit of 60 requests/minute. We also offer a Premium Tier with unlimited API calls and higher rate limits. Check out the [API page](https://www.opendota.com/api-keys) to learn more.     

API version: 25.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MatchResponseDraftTimingsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MatchResponseDraftTimingsInner{}

// MatchResponseDraftTimingsInner draft_stage
type MatchResponseDraftTimingsInner struct {
	// order
	Order *int32 `json:"order,omitempty"`
	// pick
	Pick *bool `json:"pick,omitempty"`
	// active_team
	ActiveTeam *int32 `json:"active_team,omitempty"`
	// The ID value of the hero played
	HeroId *int32 `json:"hero_id,omitempty"`
	// Which slot the player is in. 0-127 are Radiant, 128-255 are Dire
	PlayerSlot NullableInt32 `json:"player_slot,omitempty"`
	// extra_time
	ExtraTime *int32 `json:"extra_time,omitempty"`
	// total_time_taken
	TotalTimeTaken *int32 `json:"total_time_taken,omitempty"`
}

// NewMatchResponseDraftTimingsInner instantiates a new MatchResponseDraftTimingsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMatchResponseDraftTimingsInner() *MatchResponseDraftTimingsInner {
	this := MatchResponseDraftTimingsInner{}
	return &this
}

// NewMatchResponseDraftTimingsInnerWithDefaults instantiates a new MatchResponseDraftTimingsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMatchResponseDraftTimingsInnerWithDefaults() *MatchResponseDraftTimingsInner {
	this := MatchResponseDraftTimingsInner{}
	return &this
}

// GetOrder returns the Order field value if set, zero value otherwise.
func (o *MatchResponseDraftTimingsInner) GetOrder() int32 {
	if o == nil || IsNil(o.Order) {
		var ret int32
		return ret
	}
	return *o.Order
}

// GetOrderOk returns a tuple with the Order field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MatchResponseDraftTimingsInner) GetOrderOk() (*int32, bool) {
	if o == nil || IsNil(o.Order) {
		return nil, false
	}
	return o.Order, true
}

// HasOrder returns a boolean if a field has been set.
func (o *MatchResponseDraftTimingsInner) HasOrder() bool {
	if o != nil && !IsNil(o.Order) {
		return true
	}

	return false
}

// SetOrder gets a reference to the given int32 and assigns it to the Order field.
func (o *MatchResponseDraftTimingsInner) SetOrder(v int32) {
	o.Order = &v
}

// GetPick returns the Pick field value if set, zero value otherwise.
func (o *MatchResponseDraftTimingsInner) GetPick() bool {
	if o == nil || IsNil(o.Pick) {
		var ret bool
		return ret
	}
	return *o.Pick
}

// GetPickOk returns a tuple with the Pick field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MatchResponseDraftTimingsInner) GetPickOk() (*bool, bool) {
	if o == nil || IsNil(o.Pick) {
		return nil, false
	}
	return o.Pick, true
}

// HasPick returns a boolean if a field has been set.
func (o *MatchResponseDraftTimingsInner) HasPick() bool {
	if o != nil && !IsNil(o.Pick) {
		return true
	}

	return false
}

// SetPick gets a reference to the given bool and assigns it to the Pick field.
func (o *MatchResponseDraftTimingsInner) SetPick(v bool) {
	o.Pick = &v
}

// GetActiveTeam returns the ActiveTeam field value if set, zero value otherwise.
func (o *MatchResponseDraftTimingsInner) GetActiveTeam() int32 {
	if o == nil || IsNil(o.ActiveTeam) {
		var ret int32
		return ret
	}
	return *o.ActiveTeam
}

// GetActiveTeamOk returns a tuple with the ActiveTeam field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MatchResponseDraftTimingsInner) GetActiveTeamOk() (*int32, bool) {
	if o == nil || IsNil(o.ActiveTeam) {
		return nil, false
	}
	return o.ActiveTeam, true
}

// HasActiveTeam returns a boolean if a field has been set.
func (o *MatchResponseDraftTimingsInner) HasActiveTeam() bool {
	if o != nil && !IsNil(o.ActiveTeam) {
		return true
	}

	return false
}

// SetActiveTeam gets a reference to the given int32 and assigns it to the ActiveTeam field.
func (o *MatchResponseDraftTimingsInner) SetActiveTeam(v int32) {
	o.ActiveTeam = &v
}

// GetHeroId returns the HeroId field value if set, zero value otherwise.
func (o *MatchResponseDraftTimingsInner) GetHeroId() int32 {
	if o == nil || IsNil(o.HeroId) {
		var ret int32
		return ret
	}
	return *o.HeroId
}

// GetHeroIdOk returns a tuple with the HeroId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MatchResponseDraftTimingsInner) GetHeroIdOk() (*int32, bool) {
	if o == nil || IsNil(o.HeroId) {
		return nil, false
	}
	return o.HeroId, true
}

// HasHeroId returns a boolean if a field has been set.
func (o *MatchResponseDraftTimingsInner) HasHeroId() bool {
	if o != nil && !IsNil(o.HeroId) {
		return true
	}

	return false
}

// SetHeroId gets a reference to the given int32 and assigns it to the HeroId field.
func (o *MatchResponseDraftTimingsInner) SetHeroId(v int32) {
	o.HeroId = &v
}

// GetPlayerSlot returns the PlayerSlot field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MatchResponseDraftTimingsInner) GetPlayerSlot() int32 {
	if o == nil || IsNil(o.PlayerSlot.Get()) {
		var ret int32
		return ret
	}
	return *o.PlayerSlot.Get()
}

// GetPlayerSlotOk returns a tuple with the PlayerSlot field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MatchResponseDraftTimingsInner) GetPlayerSlotOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PlayerSlot.Get(), o.PlayerSlot.IsSet()
}

// HasPlayerSlot returns a boolean if a field has been set.
func (o *MatchResponseDraftTimingsInner) HasPlayerSlot() bool {
	if o != nil && o.PlayerSlot.IsSet() {
		return true
	}

	return false
}

// SetPlayerSlot gets a reference to the given NullableInt32 and assigns it to the PlayerSlot field.
func (o *MatchResponseDraftTimingsInner) SetPlayerSlot(v int32) {
	o.PlayerSlot.Set(&v)
}
// SetPlayerSlotNil sets the value for PlayerSlot to be an explicit nil
func (o *MatchResponseDraftTimingsInner) SetPlayerSlotNil() {
	o.PlayerSlot.Set(nil)
}

// UnsetPlayerSlot ensures that no value is present for PlayerSlot, not even an explicit nil
func (o *MatchResponseDraftTimingsInner) UnsetPlayerSlot() {
	o.PlayerSlot.Unset()
}

// GetExtraTime returns the ExtraTime field value if set, zero value otherwise.
func (o *MatchResponseDraftTimingsInner) GetExtraTime() int32 {
	if o == nil || IsNil(o.ExtraTime) {
		var ret int32
		return ret
	}
	return *o.ExtraTime
}

// GetExtraTimeOk returns a tuple with the ExtraTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MatchResponseDraftTimingsInner) GetExtraTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.ExtraTime) {
		return nil, false
	}
	return o.ExtraTime, true
}

// HasExtraTime returns a boolean if a field has been set.
func (o *MatchResponseDraftTimingsInner) HasExtraTime() bool {
	if o != nil && !IsNil(o.ExtraTime) {
		return true
	}

	return false
}

// SetExtraTime gets a reference to the given int32 and assigns it to the ExtraTime field.
func (o *MatchResponseDraftTimingsInner) SetExtraTime(v int32) {
	o.ExtraTime = &v
}

// GetTotalTimeTaken returns the TotalTimeTaken field value if set, zero value otherwise.
func (o *MatchResponseDraftTimingsInner) GetTotalTimeTaken() int32 {
	if o == nil || IsNil(o.TotalTimeTaken) {
		var ret int32
		return ret
	}
	return *o.TotalTimeTaken
}

// GetTotalTimeTakenOk returns a tuple with the TotalTimeTaken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MatchResponseDraftTimingsInner) GetTotalTimeTakenOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalTimeTaken) {
		return nil, false
	}
	return o.TotalTimeTaken, true
}

// HasTotalTimeTaken returns a boolean if a field has been set.
func (o *MatchResponseDraftTimingsInner) HasTotalTimeTaken() bool {
	if o != nil && !IsNil(o.TotalTimeTaken) {
		return true
	}

	return false
}

// SetTotalTimeTaken gets a reference to the given int32 and assigns it to the TotalTimeTaken field.
func (o *MatchResponseDraftTimingsInner) SetTotalTimeTaken(v int32) {
	o.TotalTimeTaken = &v
}

func (o MatchResponseDraftTimingsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MatchResponseDraftTimingsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Order) {
		toSerialize["order"] = o.Order
	}
	if !IsNil(o.Pick) {
		toSerialize["pick"] = o.Pick
	}
	if !IsNil(o.ActiveTeam) {
		toSerialize["active_team"] = o.ActiveTeam
	}
	if !IsNil(o.HeroId) {
		toSerialize["hero_id"] = o.HeroId
	}
	if o.PlayerSlot.IsSet() {
		toSerialize["player_slot"] = o.PlayerSlot.Get()
	}
	if !IsNil(o.ExtraTime) {
		toSerialize["extra_time"] = o.ExtraTime
	}
	if !IsNil(o.TotalTimeTaken) {
		toSerialize["total_time_taken"] = o.TotalTimeTaken
	}
	return toSerialize, nil
}

type NullableMatchResponseDraftTimingsInner struct {
	value *MatchResponseDraftTimingsInner
	isSet bool
}

func (v NullableMatchResponseDraftTimingsInner) Get() *MatchResponseDraftTimingsInner {
	return v.value
}

func (v *NullableMatchResponseDraftTimingsInner) Set(val *MatchResponseDraftTimingsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableMatchResponseDraftTimingsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableMatchResponseDraftTimingsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMatchResponseDraftTimingsInner(val *MatchResponseDraftTimingsInner) *NullableMatchResponseDraftTimingsInner {
	return &NullableMatchResponseDraftTimingsInner{value: val, isSet: true}
}

func (v NullableMatchResponseDraftTimingsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMatchResponseDraftTimingsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


