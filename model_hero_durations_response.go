/*
OpenDota API

# Introduction The OpenDota API provides Dota 2 related data including advanced match data extracted from match replays.  You can find data that can be used to convert hero and ability IDs and other information provided by the API from the [dotaconstants](https://github.com/odota/dotaconstants) repository.  Without a key, you can make 2,000 free calls per day at a rate limit of 60 requests/minute. We also offer a Premium Tier with unlimited API calls and higher rate limits. Check out the [API page](https://www.opendota.com/api-keys) to learn more.     

API version: 25.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the HeroDurationsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HeroDurationsResponse{}

// HeroDurationsResponse struct for HeroDurationsResponse
type HeroDurationsResponse struct {
	// Lower bound of number of seconds the match lasted
	DurationBin *string `json:"duration_bin,omitempty"`
	// Number of games played
	GamesPlayed *int32 `json:"games_played,omitempty"`
	// Number of wins
	Wins *int32 `json:"wins,omitempty"`
}

// NewHeroDurationsResponse instantiates a new HeroDurationsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHeroDurationsResponse() *HeroDurationsResponse {
	this := HeroDurationsResponse{}
	return &this
}

// NewHeroDurationsResponseWithDefaults instantiates a new HeroDurationsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHeroDurationsResponseWithDefaults() *HeroDurationsResponse {
	this := HeroDurationsResponse{}
	return &this
}

// GetDurationBin returns the DurationBin field value if set, zero value otherwise.
func (o *HeroDurationsResponse) GetDurationBin() string {
	if o == nil || IsNil(o.DurationBin) {
		var ret string
		return ret
	}
	return *o.DurationBin
}

// GetDurationBinOk returns a tuple with the DurationBin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroDurationsResponse) GetDurationBinOk() (*string, bool) {
	if o == nil || IsNil(o.DurationBin) {
		return nil, false
	}
	return o.DurationBin, true
}

// HasDurationBin returns a boolean if a field has been set.
func (o *HeroDurationsResponse) HasDurationBin() bool {
	if o != nil && !IsNil(o.DurationBin) {
		return true
	}

	return false
}

// SetDurationBin gets a reference to the given string and assigns it to the DurationBin field.
func (o *HeroDurationsResponse) SetDurationBin(v string) {
	o.DurationBin = &v
}

// GetGamesPlayed returns the GamesPlayed field value if set, zero value otherwise.
func (o *HeroDurationsResponse) GetGamesPlayed() int32 {
	if o == nil || IsNil(o.GamesPlayed) {
		var ret int32
		return ret
	}
	return *o.GamesPlayed
}

// GetGamesPlayedOk returns a tuple with the GamesPlayed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroDurationsResponse) GetGamesPlayedOk() (*int32, bool) {
	if o == nil || IsNil(o.GamesPlayed) {
		return nil, false
	}
	return o.GamesPlayed, true
}

// HasGamesPlayed returns a boolean if a field has been set.
func (o *HeroDurationsResponse) HasGamesPlayed() bool {
	if o != nil && !IsNil(o.GamesPlayed) {
		return true
	}

	return false
}

// SetGamesPlayed gets a reference to the given int32 and assigns it to the GamesPlayed field.
func (o *HeroDurationsResponse) SetGamesPlayed(v int32) {
	o.GamesPlayed = &v
}

// GetWins returns the Wins field value if set, zero value otherwise.
func (o *HeroDurationsResponse) GetWins() int32 {
	if o == nil || IsNil(o.Wins) {
		var ret int32
		return ret
	}
	return *o.Wins
}

// GetWinsOk returns a tuple with the Wins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroDurationsResponse) GetWinsOk() (*int32, bool) {
	if o == nil || IsNil(o.Wins) {
		return nil, false
	}
	return o.Wins, true
}

// HasWins returns a boolean if a field has been set.
func (o *HeroDurationsResponse) HasWins() bool {
	if o != nil && !IsNil(o.Wins) {
		return true
	}

	return false
}

// SetWins gets a reference to the given int32 and assigns it to the Wins field.
func (o *HeroDurationsResponse) SetWins(v int32) {
	o.Wins = &v
}

func (o HeroDurationsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HeroDurationsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DurationBin) {
		toSerialize["duration_bin"] = o.DurationBin
	}
	if !IsNil(o.GamesPlayed) {
		toSerialize["games_played"] = o.GamesPlayed
	}
	if !IsNil(o.Wins) {
		toSerialize["wins"] = o.Wins
	}
	return toSerialize, nil
}

type NullableHeroDurationsResponse struct {
	value *HeroDurationsResponse
	isSet bool
}

func (v NullableHeroDurationsResponse) Get() *HeroDurationsResponse {
	return v.value
}

func (v *NullableHeroDurationsResponse) Set(val *HeroDurationsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableHeroDurationsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableHeroDurationsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHeroDurationsResponse(val *HeroDurationsResponse) *NullableHeroDurationsResponse {
	return &NullableHeroDurationsResponse{value: val, isSet: true}
}

func (v NullableHeroDurationsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHeroDurationsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


