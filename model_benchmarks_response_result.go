/*
OpenDota API

# Introduction The OpenDota API provides Dota 2 related data including advanced match data extracted from match replays.  You can find data that can be used to convert hero and ability IDs and other information provided by the API from the [dotaconstants](https://github.com/odota/dotaconstants) repository.  Without a key, you can make 2,000 free calls per day at a rate limit of 60 requests/minute. We also offer a Premium Tier with unlimited API calls and higher rate limits. Check out the [API page](https://www.opendota.com/api-keys) to learn more.     

API version: 25.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BenchmarksResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BenchmarksResponseResult{}

// BenchmarksResponseResult result
type BenchmarksResponseResult struct {
	GoldPerMin []BenchmarksResponseResultGoldPerMinInner `json:"gold_per_min,omitempty"`
	XpPerMin []BenchmarksResponseResultGoldPerMinInner `json:"xp_per_min,omitempty"`
	KillsPerMin []BenchmarksResponseResultGoldPerMinInner `json:"kills_per_min,omitempty"`
	LastHitsPerMin []BenchmarksResponseResultGoldPerMinInner `json:"last_hits_per_min,omitempty"`
	HeroDamagePerMin []BenchmarksResponseResultGoldPerMinInner `json:"hero_damage_per_min,omitempty"`
	HeroHealingPerMin []BenchmarksResponseResultGoldPerMinInner `json:"hero_healing_per_min,omitempty"`
	TowerDamage []BenchmarksResponseResultTowerDamageInner `json:"tower_damage,omitempty"`
}

// NewBenchmarksResponseResult instantiates a new BenchmarksResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBenchmarksResponseResult() *BenchmarksResponseResult {
	this := BenchmarksResponseResult{}
	return &this
}

// NewBenchmarksResponseResultWithDefaults instantiates a new BenchmarksResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBenchmarksResponseResultWithDefaults() *BenchmarksResponseResult {
	this := BenchmarksResponseResult{}
	return &this
}

// GetGoldPerMin returns the GoldPerMin field value if set, zero value otherwise.
func (o *BenchmarksResponseResult) GetGoldPerMin() []BenchmarksResponseResultGoldPerMinInner {
	if o == nil || IsNil(o.GoldPerMin) {
		var ret []BenchmarksResponseResultGoldPerMinInner
		return ret
	}
	return o.GoldPerMin
}

// GetGoldPerMinOk returns a tuple with the GoldPerMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BenchmarksResponseResult) GetGoldPerMinOk() ([]BenchmarksResponseResultGoldPerMinInner, bool) {
	if o == nil || IsNil(o.GoldPerMin) {
		return nil, false
	}
	return o.GoldPerMin, true
}

// HasGoldPerMin returns a boolean if a field has been set.
func (o *BenchmarksResponseResult) HasGoldPerMin() bool {
	if o != nil && !IsNil(o.GoldPerMin) {
		return true
	}

	return false
}

// SetGoldPerMin gets a reference to the given []BenchmarksResponseResultGoldPerMinInner and assigns it to the GoldPerMin field.
func (o *BenchmarksResponseResult) SetGoldPerMin(v []BenchmarksResponseResultGoldPerMinInner) {
	o.GoldPerMin = v
}

// GetXpPerMin returns the XpPerMin field value if set, zero value otherwise.
func (o *BenchmarksResponseResult) GetXpPerMin() []BenchmarksResponseResultGoldPerMinInner {
	if o == nil || IsNil(o.XpPerMin) {
		var ret []BenchmarksResponseResultGoldPerMinInner
		return ret
	}
	return o.XpPerMin
}

// GetXpPerMinOk returns a tuple with the XpPerMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BenchmarksResponseResult) GetXpPerMinOk() ([]BenchmarksResponseResultGoldPerMinInner, bool) {
	if o == nil || IsNil(o.XpPerMin) {
		return nil, false
	}
	return o.XpPerMin, true
}

// HasXpPerMin returns a boolean if a field has been set.
func (o *BenchmarksResponseResult) HasXpPerMin() bool {
	if o != nil && !IsNil(o.XpPerMin) {
		return true
	}

	return false
}

// SetXpPerMin gets a reference to the given []BenchmarksResponseResultGoldPerMinInner and assigns it to the XpPerMin field.
func (o *BenchmarksResponseResult) SetXpPerMin(v []BenchmarksResponseResultGoldPerMinInner) {
	o.XpPerMin = v
}

// GetKillsPerMin returns the KillsPerMin field value if set, zero value otherwise.
func (o *BenchmarksResponseResult) GetKillsPerMin() []BenchmarksResponseResultGoldPerMinInner {
	if o == nil || IsNil(o.KillsPerMin) {
		var ret []BenchmarksResponseResultGoldPerMinInner
		return ret
	}
	return o.KillsPerMin
}

// GetKillsPerMinOk returns a tuple with the KillsPerMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BenchmarksResponseResult) GetKillsPerMinOk() ([]BenchmarksResponseResultGoldPerMinInner, bool) {
	if o == nil || IsNil(o.KillsPerMin) {
		return nil, false
	}
	return o.KillsPerMin, true
}

// HasKillsPerMin returns a boolean if a field has been set.
func (o *BenchmarksResponseResult) HasKillsPerMin() bool {
	if o != nil && !IsNil(o.KillsPerMin) {
		return true
	}

	return false
}

// SetKillsPerMin gets a reference to the given []BenchmarksResponseResultGoldPerMinInner and assigns it to the KillsPerMin field.
func (o *BenchmarksResponseResult) SetKillsPerMin(v []BenchmarksResponseResultGoldPerMinInner) {
	o.KillsPerMin = v
}

// GetLastHitsPerMin returns the LastHitsPerMin field value if set, zero value otherwise.
func (o *BenchmarksResponseResult) GetLastHitsPerMin() []BenchmarksResponseResultGoldPerMinInner {
	if o == nil || IsNil(o.LastHitsPerMin) {
		var ret []BenchmarksResponseResultGoldPerMinInner
		return ret
	}
	return o.LastHitsPerMin
}

// GetLastHitsPerMinOk returns a tuple with the LastHitsPerMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BenchmarksResponseResult) GetLastHitsPerMinOk() ([]BenchmarksResponseResultGoldPerMinInner, bool) {
	if o == nil || IsNil(o.LastHitsPerMin) {
		return nil, false
	}
	return o.LastHitsPerMin, true
}

// HasLastHitsPerMin returns a boolean if a field has been set.
func (o *BenchmarksResponseResult) HasLastHitsPerMin() bool {
	if o != nil && !IsNil(o.LastHitsPerMin) {
		return true
	}

	return false
}

// SetLastHitsPerMin gets a reference to the given []BenchmarksResponseResultGoldPerMinInner and assigns it to the LastHitsPerMin field.
func (o *BenchmarksResponseResult) SetLastHitsPerMin(v []BenchmarksResponseResultGoldPerMinInner) {
	o.LastHitsPerMin = v
}

// GetHeroDamagePerMin returns the HeroDamagePerMin field value if set, zero value otherwise.
func (o *BenchmarksResponseResult) GetHeroDamagePerMin() []BenchmarksResponseResultGoldPerMinInner {
	if o == nil || IsNil(o.HeroDamagePerMin) {
		var ret []BenchmarksResponseResultGoldPerMinInner
		return ret
	}
	return o.HeroDamagePerMin
}

// GetHeroDamagePerMinOk returns a tuple with the HeroDamagePerMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BenchmarksResponseResult) GetHeroDamagePerMinOk() ([]BenchmarksResponseResultGoldPerMinInner, bool) {
	if o == nil || IsNil(o.HeroDamagePerMin) {
		return nil, false
	}
	return o.HeroDamagePerMin, true
}

// HasHeroDamagePerMin returns a boolean if a field has been set.
func (o *BenchmarksResponseResult) HasHeroDamagePerMin() bool {
	if o != nil && !IsNil(o.HeroDamagePerMin) {
		return true
	}

	return false
}

// SetHeroDamagePerMin gets a reference to the given []BenchmarksResponseResultGoldPerMinInner and assigns it to the HeroDamagePerMin field.
func (o *BenchmarksResponseResult) SetHeroDamagePerMin(v []BenchmarksResponseResultGoldPerMinInner) {
	o.HeroDamagePerMin = v
}

// GetHeroHealingPerMin returns the HeroHealingPerMin field value if set, zero value otherwise.
func (o *BenchmarksResponseResult) GetHeroHealingPerMin() []BenchmarksResponseResultGoldPerMinInner {
	if o == nil || IsNil(o.HeroHealingPerMin) {
		var ret []BenchmarksResponseResultGoldPerMinInner
		return ret
	}
	return o.HeroHealingPerMin
}

// GetHeroHealingPerMinOk returns a tuple with the HeroHealingPerMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BenchmarksResponseResult) GetHeroHealingPerMinOk() ([]BenchmarksResponseResultGoldPerMinInner, bool) {
	if o == nil || IsNil(o.HeroHealingPerMin) {
		return nil, false
	}
	return o.HeroHealingPerMin, true
}

// HasHeroHealingPerMin returns a boolean if a field has been set.
func (o *BenchmarksResponseResult) HasHeroHealingPerMin() bool {
	if o != nil && !IsNil(o.HeroHealingPerMin) {
		return true
	}

	return false
}

// SetHeroHealingPerMin gets a reference to the given []BenchmarksResponseResultGoldPerMinInner and assigns it to the HeroHealingPerMin field.
func (o *BenchmarksResponseResult) SetHeroHealingPerMin(v []BenchmarksResponseResultGoldPerMinInner) {
	o.HeroHealingPerMin = v
}

// GetTowerDamage returns the TowerDamage field value if set, zero value otherwise.
func (o *BenchmarksResponseResult) GetTowerDamage() []BenchmarksResponseResultTowerDamageInner {
	if o == nil || IsNil(o.TowerDamage) {
		var ret []BenchmarksResponseResultTowerDamageInner
		return ret
	}
	return o.TowerDamage
}

// GetTowerDamageOk returns a tuple with the TowerDamage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BenchmarksResponseResult) GetTowerDamageOk() ([]BenchmarksResponseResultTowerDamageInner, bool) {
	if o == nil || IsNil(o.TowerDamage) {
		return nil, false
	}
	return o.TowerDamage, true
}

// HasTowerDamage returns a boolean if a field has been set.
func (o *BenchmarksResponseResult) HasTowerDamage() bool {
	if o != nil && !IsNil(o.TowerDamage) {
		return true
	}

	return false
}

// SetTowerDamage gets a reference to the given []BenchmarksResponseResultTowerDamageInner and assigns it to the TowerDamage field.
func (o *BenchmarksResponseResult) SetTowerDamage(v []BenchmarksResponseResultTowerDamageInner) {
	o.TowerDamage = v
}

func (o BenchmarksResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BenchmarksResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GoldPerMin) {
		toSerialize["gold_per_min"] = o.GoldPerMin
	}
	if !IsNil(o.XpPerMin) {
		toSerialize["xp_per_min"] = o.XpPerMin
	}
	if !IsNil(o.KillsPerMin) {
		toSerialize["kills_per_min"] = o.KillsPerMin
	}
	if !IsNil(o.LastHitsPerMin) {
		toSerialize["last_hits_per_min"] = o.LastHitsPerMin
	}
	if !IsNil(o.HeroDamagePerMin) {
		toSerialize["hero_damage_per_min"] = o.HeroDamagePerMin
	}
	if !IsNil(o.HeroHealingPerMin) {
		toSerialize["hero_healing_per_min"] = o.HeroHealingPerMin
	}
	if !IsNil(o.TowerDamage) {
		toSerialize["tower_damage"] = o.TowerDamage
	}
	return toSerialize, nil
}

type NullableBenchmarksResponseResult struct {
	value *BenchmarksResponseResult
	isSet bool
}

func (v NullableBenchmarksResponseResult) Get() *BenchmarksResponseResult {
	return v.value
}

func (v *NullableBenchmarksResponseResult) Set(val *BenchmarksResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableBenchmarksResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableBenchmarksResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBenchmarksResponseResult(val *BenchmarksResponseResult) *NullableBenchmarksResponseResult {
	return &NullableBenchmarksResponseResult{value: val, isSet: true}
}

func (v NullableBenchmarksResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBenchmarksResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


