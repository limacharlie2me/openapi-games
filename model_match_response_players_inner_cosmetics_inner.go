/*
OpenDota API

# Introduction The OpenDota API provides Dota 2 related data including advanced match data extracted from match replays.  You can find data that can be used to convert hero and ability IDs and other information provided by the API from the [dotaconstants](https://github.com/odota/dotaconstants) repository.  Without a key, you can make 2,000 free calls per day at a rate limit of 60 requests/minute. We also offer a Premium Tier with unlimited API calls and higher rate limits. Check out the [API page](https://www.opendota.com/api-keys) to learn more.     

API version: 25.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the MatchResponsePlayersInnerCosmeticsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MatchResponsePlayersInnerCosmeticsInner{}

// MatchResponsePlayersInnerCosmeticsInner struct for MatchResponsePlayersInnerCosmeticsInner
type MatchResponsePlayersInnerCosmeticsInner struct {
	ItemId *int32 `json:"item_id,omitempty"`
	// name
	Name NullableString `json:"name,omitempty"`
	Prefab *string `json:"prefab,omitempty"`
	CreationDate NullableTime `json:"creation_date,omitempty"`
	ImageInventory NullableString `json:"image_inventory,omitempty"`
	ImagePath NullableString `json:"image_path,omitempty"`
	ItemDescription NullableString `json:"item_description,omitempty"`
	ItemName *string `json:"item_name,omitempty"`
	ItemRarity NullableString `json:"item_rarity,omitempty"`
	ItemTypeName NullableString `json:"item_type_name,omitempty"`
	UsedByHeroes NullableString `json:"used_by_heroes,omitempty"`
}

// NewMatchResponsePlayersInnerCosmeticsInner instantiates a new MatchResponsePlayersInnerCosmeticsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMatchResponsePlayersInnerCosmeticsInner() *MatchResponsePlayersInnerCosmeticsInner {
	this := MatchResponsePlayersInnerCosmeticsInner{}
	return &this
}

// NewMatchResponsePlayersInnerCosmeticsInnerWithDefaults instantiates a new MatchResponsePlayersInnerCosmeticsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMatchResponsePlayersInnerCosmeticsInnerWithDefaults() *MatchResponsePlayersInnerCosmeticsInner {
	this := MatchResponsePlayersInnerCosmeticsInner{}
	return &this
}

// GetItemId returns the ItemId field value if set, zero value otherwise.
func (o *MatchResponsePlayersInnerCosmeticsInner) GetItemId() int32 {
	if o == nil || IsNil(o.ItemId) {
		var ret int32
		return ret
	}
	return *o.ItemId
}

// GetItemIdOk returns a tuple with the ItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MatchResponsePlayersInnerCosmeticsInner) GetItemIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ItemId) {
		return nil, false
	}
	return o.ItemId, true
}

// HasItemId returns a boolean if a field has been set.
func (o *MatchResponsePlayersInnerCosmeticsInner) HasItemId() bool {
	if o != nil && !IsNil(o.ItemId) {
		return true
	}

	return false
}

// SetItemId gets a reference to the given int32 and assigns it to the ItemId field.
func (o *MatchResponsePlayersInnerCosmeticsInner) SetItemId(v int32) {
	o.ItemId = &v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MatchResponsePlayersInnerCosmeticsInner) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MatchResponsePlayersInnerCosmeticsInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *MatchResponsePlayersInnerCosmeticsInner) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *MatchResponsePlayersInnerCosmeticsInner) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *MatchResponsePlayersInnerCosmeticsInner) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *MatchResponsePlayersInnerCosmeticsInner) UnsetName() {
	o.Name.Unset()
}

// GetPrefab returns the Prefab field value if set, zero value otherwise.
func (o *MatchResponsePlayersInnerCosmeticsInner) GetPrefab() string {
	if o == nil || IsNil(o.Prefab) {
		var ret string
		return ret
	}
	return *o.Prefab
}

// GetPrefabOk returns a tuple with the Prefab field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MatchResponsePlayersInnerCosmeticsInner) GetPrefabOk() (*string, bool) {
	if o == nil || IsNil(o.Prefab) {
		return nil, false
	}
	return o.Prefab, true
}

// HasPrefab returns a boolean if a field has been set.
func (o *MatchResponsePlayersInnerCosmeticsInner) HasPrefab() bool {
	if o != nil && !IsNil(o.Prefab) {
		return true
	}

	return false
}

// SetPrefab gets a reference to the given string and assigns it to the Prefab field.
func (o *MatchResponsePlayersInnerCosmeticsInner) SetPrefab(v string) {
	o.Prefab = &v
}

// GetCreationDate returns the CreationDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MatchResponsePlayersInnerCosmeticsInner) GetCreationDate() time.Time {
	if o == nil || IsNil(o.CreationDate.Get()) {
		var ret time.Time
		return ret
	}
	return *o.CreationDate.Get()
}

// GetCreationDateOk returns a tuple with the CreationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MatchResponsePlayersInnerCosmeticsInner) GetCreationDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreationDate.Get(), o.CreationDate.IsSet()
}

// HasCreationDate returns a boolean if a field has been set.
func (o *MatchResponsePlayersInnerCosmeticsInner) HasCreationDate() bool {
	if o != nil && o.CreationDate.IsSet() {
		return true
	}

	return false
}

// SetCreationDate gets a reference to the given NullableTime and assigns it to the CreationDate field.
func (o *MatchResponsePlayersInnerCosmeticsInner) SetCreationDate(v time.Time) {
	o.CreationDate.Set(&v)
}
// SetCreationDateNil sets the value for CreationDate to be an explicit nil
func (o *MatchResponsePlayersInnerCosmeticsInner) SetCreationDateNil() {
	o.CreationDate.Set(nil)
}

// UnsetCreationDate ensures that no value is present for CreationDate, not even an explicit nil
func (o *MatchResponsePlayersInnerCosmeticsInner) UnsetCreationDate() {
	o.CreationDate.Unset()
}

// GetImageInventory returns the ImageInventory field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MatchResponsePlayersInnerCosmeticsInner) GetImageInventory() string {
	if o == nil || IsNil(o.ImageInventory.Get()) {
		var ret string
		return ret
	}
	return *o.ImageInventory.Get()
}

// GetImageInventoryOk returns a tuple with the ImageInventory field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MatchResponsePlayersInnerCosmeticsInner) GetImageInventoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ImageInventory.Get(), o.ImageInventory.IsSet()
}

// HasImageInventory returns a boolean if a field has been set.
func (o *MatchResponsePlayersInnerCosmeticsInner) HasImageInventory() bool {
	if o != nil && o.ImageInventory.IsSet() {
		return true
	}

	return false
}

// SetImageInventory gets a reference to the given NullableString and assigns it to the ImageInventory field.
func (o *MatchResponsePlayersInnerCosmeticsInner) SetImageInventory(v string) {
	o.ImageInventory.Set(&v)
}
// SetImageInventoryNil sets the value for ImageInventory to be an explicit nil
func (o *MatchResponsePlayersInnerCosmeticsInner) SetImageInventoryNil() {
	o.ImageInventory.Set(nil)
}

// UnsetImageInventory ensures that no value is present for ImageInventory, not even an explicit nil
func (o *MatchResponsePlayersInnerCosmeticsInner) UnsetImageInventory() {
	o.ImageInventory.Unset()
}

// GetImagePath returns the ImagePath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MatchResponsePlayersInnerCosmeticsInner) GetImagePath() string {
	if o == nil || IsNil(o.ImagePath.Get()) {
		var ret string
		return ret
	}
	return *o.ImagePath.Get()
}

// GetImagePathOk returns a tuple with the ImagePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MatchResponsePlayersInnerCosmeticsInner) GetImagePathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ImagePath.Get(), o.ImagePath.IsSet()
}

// HasImagePath returns a boolean if a field has been set.
func (o *MatchResponsePlayersInnerCosmeticsInner) HasImagePath() bool {
	if o != nil && o.ImagePath.IsSet() {
		return true
	}

	return false
}

// SetImagePath gets a reference to the given NullableString and assigns it to the ImagePath field.
func (o *MatchResponsePlayersInnerCosmeticsInner) SetImagePath(v string) {
	o.ImagePath.Set(&v)
}
// SetImagePathNil sets the value for ImagePath to be an explicit nil
func (o *MatchResponsePlayersInnerCosmeticsInner) SetImagePathNil() {
	o.ImagePath.Set(nil)
}

// UnsetImagePath ensures that no value is present for ImagePath, not even an explicit nil
func (o *MatchResponsePlayersInnerCosmeticsInner) UnsetImagePath() {
	o.ImagePath.Unset()
}

// GetItemDescription returns the ItemDescription field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MatchResponsePlayersInnerCosmeticsInner) GetItemDescription() string {
	if o == nil || IsNil(o.ItemDescription.Get()) {
		var ret string
		return ret
	}
	return *o.ItemDescription.Get()
}

// GetItemDescriptionOk returns a tuple with the ItemDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MatchResponsePlayersInnerCosmeticsInner) GetItemDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ItemDescription.Get(), o.ItemDescription.IsSet()
}

// HasItemDescription returns a boolean if a field has been set.
func (o *MatchResponsePlayersInnerCosmeticsInner) HasItemDescription() bool {
	if o != nil && o.ItemDescription.IsSet() {
		return true
	}

	return false
}

// SetItemDescription gets a reference to the given NullableString and assigns it to the ItemDescription field.
func (o *MatchResponsePlayersInnerCosmeticsInner) SetItemDescription(v string) {
	o.ItemDescription.Set(&v)
}
// SetItemDescriptionNil sets the value for ItemDescription to be an explicit nil
func (o *MatchResponsePlayersInnerCosmeticsInner) SetItemDescriptionNil() {
	o.ItemDescription.Set(nil)
}

// UnsetItemDescription ensures that no value is present for ItemDescription, not even an explicit nil
func (o *MatchResponsePlayersInnerCosmeticsInner) UnsetItemDescription() {
	o.ItemDescription.Unset()
}

// GetItemName returns the ItemName field value if set, zero value otherwise.
func (o *MatchResponsePlayersInnerCosmeticsInner) GetItemName() string {
	if o == nil || IsNil(o.ItemName) {
		var ret string
		return ret
	}
	return *o.ItemName
}

// GetItemNameOk returns a tuple with the ItemName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MatchResponsePlayersInnerCosmeticsInner) GetItemNameOk() (*string, bool) {
	if o == nil || IsNil(o.ItemName) {
		return nil, false
	}
	return o.ItemName, true
}

// HasItemName returns a boolean if a field has been set.
func (o *MatchResponsePlayersInnerCosmeticsInner) HasItemName() bool {
	if o != nil && !IsNil(o.ItemName) {
		return true
	}

	return false
}

// SetItemName gets a reference to the given string and assigns it to the ItemName field.
func (o *MatchResponsePlayersInnerCosmeticsInner) SetItemName(v string) {
	o.ItemName = &v
}

// GetItemRarity returns the ItemRarity field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MatchResponsePlayersInnerCosmeticsInner) GetItemRarity() string {
	if o == nil || IsNil(o.ItemRarity.Get()) {
		var ret string
		return ret
	}
	return *o.ItemRarity.Get()
}

// GetItemRarityOk returns a tuple with the ItemRarity field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MatchResponsePlayersInnerCosmeticsInner) GetItemRarityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ItemRarity.Get(), o.ItemRarity.IsSet()
}

// HasItemRarity returns a boolean if a field has been set.
func (o *MatchResponsePlayersInnerCosmeticsInner) HasItemRarity() bool {
	if o != nil && o.ItemRarity.IsSet() {
		return true
	}

	return false
}

// SetItemRarity gets a reference to the given NullableString and assigns it to the ItemRarity field.
func (o *MatchResponsePlayersInnerCosmeticsInner) SetItemRarity(v string) {
	o.ItemRarity.Set(&v)
}
// SetItemRarityNil sets the value for ItemRarity to be an explicit nil
func (o *MatchResponsePlayersInnerCosmeticsInner) SetItemRarityNil() {
	o.ItemRarity.Set(nil)
}

// UnsetItemRarity ensures that no value is present for ItemRarity, not even an explicit nil
func (o *MatchResponsePlayersInnerCosmeticsInner) UnsetItemRarity() {
	o.ItemRarity.Unset()
}

// GetItemTypeName returns the ItemTypeName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MatchResponsePlayersInnerCosmeticsInner) GetItemTypeName() string {
	if o == nil || IsNil(o.ItemTypeName.Get()) {
		var ret string
		return ret
	}
	return *o.ItemTypeName.Get()
}

// GetItemTypeNameOk returns a tuple with the ItemTypeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MatchResponsePlayersInnerCosmeticsInner) GetItemTypeNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ItemTypeName.Get(), o.ItemTypeName.IsSet()
}

// HasItemTypeName returns a boolean if a field has been set.
func (o *MatchResponsePlayersInnerCosmeticsInner) HasItemTypeName() bool {
	if o != nil && o.ItemTypeName.IsSet() {
		return true
	}

	return false
}

// SetItemTypeName gets a reference to the given NullableString and assigns it to the ItemTypeName field.
func (o *MatchResponsePlayersInnerCosmeticsInner) SetItemTypeName(v string) {
	o.ItemTypeName.Set(&v)
}
// SetItemTypeNameNil sets the value for ItemTypeName to be an explicit nil
func (o *MatchResponsePlayersInnerCosmeticsInner) SetItemTypeNameNil() {
	o.ItemTypeName.Set(nil)
}

// UnsetItemTypeName ensures that no value is present for ItemTypeName, not even an explicit nil
func (o *MatchResponsePlayersInnerCosmeticsInner) UnsetItemTypeName() {
	o.ItemTypeName.Unset()
}

// GetUsedByHeroes returns the UsedByHeroes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MatchResponsePlayersInnerCosmeticsInner) GetUsedByHeroes() string {
	if o == nil || IsNil(o.UsedByHeroes.Get()) {
		var ret string
		return ret
	}
	return *o.UsedByHeroes.Get()
}

// GetUsedByHeroesOk returns a tuple with the UsedByHeroes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MatchResponsePlayersInnerCosmeticsInner) GetUsedByHeroesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UsedByHeroes.Get(), o.UsedByHeroes.IsSet()
}

// HasUsedByHeroes returns a boolean if a field has been set.
func (o *MatchResponsePlayersInnerCosmeticsInner) HasUsedByHeroes() bool {
	if o != nil && o.UsedByHeroes.IsSet() {
		return true
	}

	return false
}

// SetUsedByHeroes gets a reference to the given NullableString and assigns it to the UsedByHeroes field.
func (o *MatchResponsePlayersInnerCosmeticsInner) SetUsedByHeroes(v string) {
	o.UsedByHeroes.Set(&v)
}
// SetUsedByHeroesNil sets the value for UsedByHeroes to be an explicit nil
func (o *MatchResponsePlayersInnerCosmeticsInner) SetUsedByHeroesNil() {
	o.UsedByHeroes.Set(nil)
}

// UnsetUsedByHeroes ensures that no value is present for UsedByHeroes, not even an explicit nil
func (o *MatchResponsePlayersInnerCosmeticsInner) UnsetUsedByHeroes() {
	o.UsedByHeroes.Unset()
}

func (o MatchResponsePlayersInnerCosmeticsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MatchResponsePlayersInnerCosmeticsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ItemId) {
		toSerialize["item_id"] = o.ItemId
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if !IsNil(o.Prefab) {
		toSerialize["prefab"] = o.Prefab
	}
	if o.CreationDate.IsSet() {
		toSerialize["creation_date"] = o.CreationDate.Get()
	}
	if o.ImageInventory.IsSet() {
		toSerialize["image_inventory"] = o.ImageInventory.Get()
	}
	if o.ImagePath.IsSet() {
		toSerialize["image_path"] = o.ImagePath.Get()
	}
	if o.ItemDescription.IsSet() {
		toSerialize["item_description"] = o.ItemDescription.Get()
	}
	if !IsNil(o.ItemName) {
		toSerialize["item_name"] = o.ItemName
	}
	if o.ItemRarity.IsSet() {
		toSerialize["item_rarity"] = o.ItemRarity.Get()
	}
	if o.ItemTypeName.IsSet() {
		toSerialize["item_type_name"] = o.ItemTypeName.Get()
	}
	if o.UsedByHeroes.IsSet() {
		toSerialize["used_by_heroes"] = o.UsedByHeroes.Get()
	}
	return toSerialize, nil
}

type NullableMatchResponsePlayersInnerCosmeticsInner struct {
	value *MatchResponsePlayersInnerCosmeticsInner
	isSet bool
}

func (v NullableMatchResponsePlayersInnerCosmeticsInner) Get() *MatchResponsePlayersInnerCosmeticsInner {
	return v.value
}

func (v *NullableMatchResponsePlayersInnerCosmeticsInner) Set(val *MatchResponsePlayersInnerCosmeticsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableMatchResponsePlayersInnerCosmeticsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableMatchResponsePlayersInnerCosmeticsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMatchResponsePlayersInnerCosmeticsInner(val *MatchResponsePlayersInnerCosmeticsInner) *NullableMatchResponsePlayersInnerCosmeticsInner {
	return &NullableMatchResponsePlayersInnerCosmeticsInner{value: val, isSet: true}
}

func (v NullableMatchResponsePlayersInnerCosmeticsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMatchResponsePlayersInnerCosmeticsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


