/*
OpenDota API

# Introduction The OpenDota API provides Dota 2 related data including advanced match data extracted from match replays.  You can find data that can be used to convert hero and ability IDs and other information provided by the API from the [dotaconstants](https://github.com/odota/dotaconstants) repository.  Without a key, you can make 2,000 free calls per day at a rate limit of 60 requests/minute. We also offer a Premium Tier with unlimited API calls and higher rate limits. Check out the [API page](https://www.opendota.com/api-keys) to learn more.     

API version: 25.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DistributionsResponseRanksRowsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DistributionsResponseRanksRowsInner{}

// DistributionsResponseRanksRowsInner struct for DistributionsResponseRanksRowsInner
type DistributionsResponseRanksRowsInner struct {
	// bin
	Bin *int32 `json:"bin,omitempty"`
	// bin_name
	BinName *int32 `json:"bin_name,omitempty"`
	// count
	Count *int32 `json:"count,omitempty"`
	// cumulative_sum
	CumulativeSum *int32 `json:"cumulative_sum,omitempty"`
}

// NewDistributionsResponseRanksRowsInner instantiates a new DistributionsResponseRanksRowsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDistributionsResponseRanksRowsInner() *DistributionsResponseRanksRowsInner {
	this := DistributionsResponseRanksRowsInner{}
	return &this
}

// NewDistributionsResponseRanksRowsInnerWithDefaults instantiates a new DistributionsResponseRanksRowsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDistributionsResponseRanksRowsInnerWithDefaults() *DistributionsResponseRanksRowsInner {
	this := DistributionsResponseRanksRowsInner{}
	return &this
}

// GetBin returns the Bin field value if set, zero value otherwise.
func (o *DistributionsResponseRanksRowsInner) GetBin() int32 {
	if o == nil || IsNil(o.Bin) {
		var ret int32
		return ret
	}
	return *o.Bin
}

// GetBinOk returns a tuple with the Bin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DistributionsResponseRanksRowsInner) GetBinOk() (*int32, bool) {
	if o == nil || IsNil(o.Bin) {
		return nil, false
	}
	return o.Bin, true
}

// HasBin returns a boolean if a field has been set.
func (o *DistributionsResponseRanksRowsInner) HasBin() bool {
	if o != nil && !IsNil(o.Bin) {
		return true
	}

	return false
}

// SetBin gets a reference to the given int32 and assigns it to the Bin field.
func (o *DistributionsResponseRanksRowsInner) SetBin(v int32) {
	o.Bin = &v
}

// GetBinName returns the BinName field value if set, zero value otherwise.
func (o *DistributionsResponseRanksRowsInner) GetBinName() int32 {
	if o == nil || IsNil(o.BinName) {
		var ret int32
		return ret
	}
	return *o.BinName
}

// GetBinNameOk returns a tuple with the BinName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DistributionsResponseRanksRowsInner) GetBinNameOk() (*int32, bool) {
	if o == nil || IsNil(o.BinName) {
		return nil, false
	}
	return o.BinName, true
}

// HasBinName returns a boolean if a field has been set.
func (o *DistributionsResponseRanksRowsInner) HasBinName() bool {
	if o != nil && !IsNil(o.BinName) {
		return true
	}

	return false
}

// SetBinName gets a reference to the given int32 and assigns it to the BinName field.
func (o *DistributionsResponseRanksRowsInner) SetBinName(v int32) {
	o.BinName = &v
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *DistributionsResponseRanksRowsInner) GetCount() int32 {
	if o == nil || IsNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DistributionsResponseRanksRowsInner) GetCountOk() (*int32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *DistributionsResponseRanksRowsInner) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *DistributionsResponseRanksRowsInner) SetCount(v int32) {
	o.Count = &v
}

// GetCumulativeSum returns the CumulativeSum field value if set, zero value otherwise.
func (o *DistributionsResponseRanksRowsInner) GetCumulativeSum() int32 {
	if o == nil || IsNil(o.CumulativeSum) {
		var ret int32
		return ret
	}
	return *o.CumulativeSum
}

// GetCumulativeSumOk returns a tuple with the CumulativeSum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DistributionsResponseRanksRowsInner) GetCumulativeSumOk() (*int32, bool) {
	if o == nil || IsNil(o.CumulativeSum) {
		return nil, false
	}
	return o.CumulativeSum, true
}

// HasCumulativeSum returns a boolean if a field has been set.
func (o *DistributionsResponseRanksRowsInner) HasCumulativeSum() bool {
	if o != nil && !IsNil(o.CumulativeSum) {
		return true
	}

	return false
}

// SetCumulativeSum gets a reference to the given int32 and assigns it to the CumulativeSum field.
func (o *DistributionsResponseRanksRowsInner) SetCumulativeSum(v int32) {
	o.CumulativeSum = &v
}

func (o DistributionsResponseRanksRowsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DistributionsResponseRanksRowsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Bin) {
		toSerialize["bin"] = o.Bin
	}
	if !IsNil(o.BinName) {
		toSerialize["bin_name"] = o.BinName
	}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	if !IsNil(o.CumulativeSum) {
		toSerialize["cumulative_sum"] = o.CumulativeSum
	}
	return toSerialize, nil
}

type NullableDistributionsResponseRanksRowsInner struct {
	value *DistributionsResponseRanksRowsInner
	isSet bool
}

func (v NullableDistributionsResponseRanksRowsInner) Get() *DistributionsResponseRanksRowsInner {
	return v.value
}

func (v *NullableDistributionsResponseRanksRowsInner) Set(val *DistributionsResponseRanksRowsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableDistributionsResponseRanksRowsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableDistributionsResponseRanksRowsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDistributionsResponseRanksRowsInner(val *DistributionsResponseRanksRowsInner) *NullableDistributionsResponseRanksRowsInner {
	return &NullableDistributionsResponseRanksRowsInner{value: val, isSet: true}
}

func (v NullableDistributionsResponseRanksRowsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDistributionsResponseRanksRowsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


