/*
OpenDota API

# Introduction The OpenDota API provides Dota 2 related data including advanced match data extracted from match replays.  You can find data that can be used to convert hero and ability IDs and other information provided by the API from the [dotaconstants](https://github.com/odota/dotaconstants) repository.  Without a key, you can make 2,000 free calls per day at a rate limit of 60 requests/minute. We also offer a Premium Tier with unlimited API calls and higher rate limits. Check out the [API page](https://www.opendota.com/api-keys) to learn more.     

API version: 25.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the HeroStatsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HeroStatsResponse{}

// HeroStatsResponse struct for HeroStatsResponse
type HeroStatsResponse struct {
	// The ID value of the hero played
	Id *int32 `json:"id,omitempty"`
	// Dota hero command name
	Name *string `json:"name,omitempty"`
	// Hero name
	LocalizedName *string `json:"localized_name,omitempty"`
	// primary_attr
	PrimaryAttr *string `json:"primary_attr,omitempty"`
	// attack_type
	AttackType *string `json:"attack_type,omitempty"`
	// roles
	Roles []string `json:"roles,omitempty"`
	// img
	Img *string `json:"img,omitempty"`
	// icon
	Icon *string `json:"icon,omitempty"`
	// base_health
	BaseHealth *int32 `json:"base_health,omitempty"`
	// base_health_regen
	BaseHealthRegen *float32 `json:"base_health_regen,omitempty"`
	// base_mana
	BaseMana *int32 `json:"base_mana,omitempty"`
	// base_mana_regen
	BaseManaRegen *int32 `json:"base_mana_regen,omitempty"`
	// base_armor
	BaseArmor *int32 `json:"base_armor,omitempty"`
	// base_mr
	BaseMr *int32 `json:"base_mr,omitempty"`
	// base_attack_min
	BaseAttackMin *int32 `json:"base_attack_min,omitempty"`
	// base_attack_max
	BaseAttackMax *int32 `json:"base_attack_max,omitempty"`
	// base_str
	BaseStr *int32 `json:"base_str,omitempty"`
	// base_agi
	BaseAgi *int32 `json:"base_agi,omitempty"`
	// base_int
	BaseInt *int32 `json:"base_int,omitempty"`
	// str_gain
	StrGain *float32 `json:"str_gain,omitempty"`
	// agi_gain
	AgiGain *float32 `json:"agi_gain,omitempty"`
	// int_gain
	IntGain *float32 `json:"int_gain,omitempty"`
	// attack_range
	AttackRange *int32 `json:"attack_range,omitempty"`
	// projectile_speed
	ProjectileSpeed *int32 `json:"projectile_speed,omitempty"`
	// attack_rate
	AttackRate *float32 `json:"attack_rate,omitempty"`
	// base_attack_time
	BaseAttackTime *int32 `json:"base_attack_time,omitempty"`
	// attack_point
	AttackPoint *float32 `json:"attack_point,omitempty"`
	// move_speed
	MoveSpeed *int32 `json:"move_speed,omitempty"`
	// turn_rate
	TurnRate *float32 `json:"turn_rate,omitempty"`
	// cm_enabled
	CmEnabled *bool `json:"cm_enabled,omitempty"`
	// legs
	Legs *int32 `json:"legs,omitempty"`
	// day_vision
	DayVision *int32 `json:"day_vision,omitempty"`
	// night_vision
	NightVision *int32 `json:"night_vision,omitempty"`
	// The ID value of the hero played
	HeroId *int32 `json:"hero_id,omitempty"`
	// Picks in Turbo mode this month
	TurboPicks *int32 `json:"turbo_picks,omitempty"`
	// Wins in Turbo mode this month
	TurboWins *int32 `json:"turbo_wins,omitempty"`
	// pro_ban
	ProBan *int32 `json:"pro_ban,omitempty"`
	// pro_win
	ProWin *int32 `json:"pro_win,omitempty"`
	// pro_pick
	ProPick *int32 `json:"pro_pick,omitempty"`
	// Herald picks
	Var1Pick *int32 `json:"1_pick,omitempty"`
	// Herald wins
	Var1Win *int32 `json:"1_win,omitempty"`
	// Guardian picks
	Var2Pick *int32 `json:"2_pick,omitempty"`
	// Guardian wins
	Var2Win *int32 `json:"2_win,omitempty"`
	// Crusader picks
	Var3Pick *int32 `json:"3_pick,omitempty"`
	// Crusader wins
	Var3Win *int32 `json:"3_win,omitempty"`
	// Archon picks
	Var4Pick *int32 `json:"4_pick,omitempty"`
	// Archon wins
	Var4Win *int32 `json:"4_win,omitempty"`
	// Legend picks
	Var5Pick *int32 `json:"5_pick,omitempty"`
	// Legend wins
	Var5Win *int32 `json:"5_win,omitempty"`
	// Ancient picks
	Var6Pick *int32 `json:"6_pick,omitempty"`
	// Ancient wins
	Var6Win *int32 `json:"6_win,omitempty"`
	// Divine picks
	Var7Pick *int32 `json:"7_pick,omitempty"`
	// Divine wins
	Var7Win *int32 `json:"7_win,omitempty"`
	// Immortal picks
	Var8Pick *int32 `json:"8_pick,omitempty"`
	// Immortal wins
	Var8Win *int32 `json:"8_win,omitempty"`
}

// NewHeroStatsResponse instantiates a new HeroStatsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHeroStatsResponse() *HeroStatsResponse {
	this := HeroStatsResponse{}
	return &this
}

// NewHeroStatsResponseWithDefaults instantiates a new HeroStatsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHeroStatsResponseWithDefaults() *HeroStatsResponse {
	this := HeroStatsResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *HeroStatsResponse) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroStatsResponse) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *HeroStatsResponse) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *HeroStatsResponse) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *HeroStatsResponse) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroStatsResponse) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *HeroStatsResponse) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *HeroStatsResponse) SetName(v string) {
	o.Name = &v
}

// GetLocalizedName returns the LocalizedName field value if set, zero value otherwise.
func (o *HeroStatsResponse) GetLocalizedName() string {
	if o == nil || IsNil(o.LocalizedName) {
		var ret string
		return ret
	}
	return *o.LocalizedName
}

// GetLocalizedNameOk returns a tuple with the LocalizedName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroStatsResponse) GetLocalizedNameOk() (*string, bool) {
	if o == nil || IsNil(o.LocalizedName) {
		return nil, false
	}
	return o.LocalizedName, true
}

// HasLocalizedName returns a boolean if a field has been set.
func (o *HeroStatsResponse) HasLocalizedName() bool {
	if o != nil && !IsNil(o.LocalizedName) {
		return true
	}

	return false
}

// SetLocalizedName gets a reference to the given string and assigns it to the LocalizedName field.
func (o *HeroStatsResponse) SetLocalizedName(v string) {
	o.LocalizedName = &v
}

// GetPrimaryAttr returns the PrimaryAttr field value if set, zero value otherwise.
func (o *HeroStatsResponse) GetPrimaryAttr() string {
	if o == nil || IsNil(o.PrimaryAttr) {
		var ret string
		return ret
	}
	return *o.PrimaryAttr
}

// GetPrimaryAttrOk returns a tuple with the PrimaryAttr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroStatsResponse) GetPrimaryAttrOk() (*string, bool) {
	if o == nil || IsNil(o.PrimaryAttr) {
		return nil, false
	}
	return o.PrimaryAttr, true
}

// HasPrimaryAttr returns a boolean if a field has been set.
func (o *HeroStatsResponse) HasPrimaryAttr() bool {
	if o != nil && !IsNil(o.PrimaryAttr) {
		return true
	}

	return false
}

// SetPrimaryAttr gets a reference to the given string and assigns it to the PrimaryAttr field.
func (o *HeroStatsResponse) SetPrimaryAttr(v string) {
	o.PrimaryAttr = &v
}

// GetAttackType returns the AttackType field value if set, zero value otherwise.
func (o *HeroStatsResponse) GetAttackType() string {
	if o == nil || IsNil(o.AttackType) {
		var ret string
		return ret
	}
	return *o.AttackType
}

// GetAttackTypeOk returns a tuple with the AttackType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroStatsResponse) GetAttackTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AttackType) {
		return nil, false
	}
	return o.AttackType, true
}

// HasAttackType returns a boolean if a field has been set.
func (o *HeroStatsResponse) HasAttackType() bool {
	if o != nil && !IsNil(o.AttackType) {
		return true
	}

	return false
}

// SetAttackType gets a reference to the given string and assigns it to the AttackType field.
func (o *HeroStatsResponse) SetAttackType(v string) {
	o.AttackType = &v
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *HeroStatsResponse) GetRoles() []string {
	if o == nil || IsNil(o.Roles) {
		var ret []string
		return ret
	}
	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroStatsResponse) GetRolesOk() ([]string, bool) {
	if o == nil || IsNil(o.Roles) {
		return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *HeroStatsResponse) HasRoles() bool {
	if o != nil && !IsNil(o.Roles) {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []string and assigns it to the Roles field.
func (o *HeroStatsResponse) SetRoles(v []string) {
	o.Roles = v
}

// GetImg returns the Img field value if set, zero value otherwise.
func (o *HeroStatsResponse) GetImg() string {
	if o == nil || IsNil(o.Img) {
		var ret string
		return ret
	}
	return *o.Img
}

// GetImgOk returns a tuple with the Img field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroStatsResponse) GetImgOk() (*string, bool) {
	if o == nil || IsNil(o.Img) {
		return nil, false
	}
	return o.Img, true
}

// HasImg returns a boolean if a field has been set.
func (o *HeroStatsResponse) HasImg() bool {
	if o != nil && !IsNil(o.Img) {
		return true
	}

	return false
}

// SetImg gets a reference to the given string and assigns it to the Img field.
func (o *HeroStatsResponse) SetImg(v string) {
	o.Img = &v
}

// GetIcon returns the Icon field value if set, zero value otherwise.
func (o *HeroStatsResponse) GetIcon() string {
	if o == nil || IsNil(o.Icon) {
		var ret string
		return ret
	}
	return *o.Icon
}

// GetIconOk returns a tuple with the Icon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroStatsResponse) GetIconOk() (*string, bool) {
	if o == nil || IsNil(o.Icon) {
		return nil, false
	}
	return o.Icon, true
}

// HasIcon returns a boolean if a field has been set.
func (o *HeroStatsResponse) HasIcon() bool {
	if o != nil && !IsNil(o.Icon) {
		return true
	}

	return false
}

// SetIcon gets a reference to the given string and assigns it to the Icon field.
func (o *HeroStatsResponse) SetIcon(v string) {
	o.Icon = &v
}

// GetBaseHealth returns the BaseHealth field value if set, zero value otherwise.
func (o *HeroStatsResponse) GetBaseHealth() int32 {
	if o == nil || IsNil(o.BaseHealth) {
		var ret int32
		return ret
	}
	return *o.BaseHealth
}

// GetBaseHealthOk returns a tuple with the BaseHealth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroStatsResponse) GetBaseHealthOk() (*int32, bool) {
	if o == nil || IsNil(o.BaseHealth) {
		return nil, false
	}
	return o.BaseHealth, true
}

// HasBaseHealth returns a boolean if a field has been set.
func (o *HeroStatsResponse) HasBaseHealth() bool {
	if o != nil && !IsNil(o.BaseHealth) {
		return true
	}

	return false
}

// SetBaseHealth gets a reference to the given int32 and assigns it to the BaseHealth field.
func (o *HeroStatsResponse) SetBaseHealth(v int32) {
	o.BaseHealth = &v
}

// GetBaseHealthRegen returns the BaseHealthRegen field value if set, zero value otherwise.
func (o *HeroStatsResponse) GetBaseHealthRegen() float32 {
	if o == nil || IsNil(o.BaseHealthRegen) {
		var ret float32
		return ret
	}
	return *o.BaseHealthRegen
}

// GetBaseHealthRegenOk returns a tuple with the BaseHealthRegen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroStatsResponse) GetBaseHealthRegenOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseHealthRegen) {
		return nil, false
	}
	return o.BaseHealthRegen, true
}

// HasBaseHealthRegen returns a boolean if a field has been set.
func (o *HeroStatsResponse) HasBaseHealthRegen() bool {
	if o != nil && !IsNil(o.BaseHealthRegen) {
		return true
	}

	return false
}

// SetBaseHealthRegen gets a reference to the given float32 and assigns it to the BaseHealthRegen field.
func (o *HeroStatsResponse) SetBaseHealthRegen(v float32) {
	o.BaseHealthRegen = &v
}

// GetBaseMana returns the BaseMana field value if set, zero value otherwise.
func (o *HeroStatsResponse) GetBaseMana() int32 {
	if o == nil || IsNil(o.BaseMana) {
		var ret int32
		return ret
	}
	return *o.BaseMana
}

// GetBaseManaOk returns a tuple with the BaseMana field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroStatsResponse) GetBaseManaOk() (*int32, bool) {
	if o == nil || IsNil(o.BaseMana) {
		return nil, false
	}
	return o.BaseMana, true
}

// HasBaseMana returns a boolean if a field has been set.
func (o *HeroStatsResponse) HasBaseMana() bool {
	if o != nil && !IsNil(o.BaseMana) {
		return true
	}

	return false
}

// SetBaseMana gets a reference to the given int32 and assigns it to the BaseMana field.
func (o *HeroStatsResponse) SetBaseMana(v int32) {
	o.BaseMana = &v
}

// GetBaseManaRegen returns the BaseManaRegen field value if set, zero value otherwise.
func (o *HeroStatsResponse) GetBaseManaRegen() int32 {
	if o == nil || IsNil(o.BaseManaRegen) {
		var ret int32
		return ret
	}
	return *o.BaseManaRegen
}

// GetBaseManaRegenOk returns a tuple with the BaseManaRegen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroStatsResponse) GetBaseManaRegenOk() (*int32, bool) {
	if o == nil || IsNil(o.BaseManaRegen) {
		return nil, false
	}
	return o.BaseManaRegen, true
}

// HasBaseManaRegen returns a boolean if a field has been set.
func (o *HeroStatsResponse) HasBaseManaRegen() bool {
	if o != nil && !IsNil(o.BaseManaRegen) {
		return true
	}

	return false
}

// SetBaseManaRegen gets a reference to the given int32 and assigns it to the BaseManaRegen field.
func (o *HeroStatsResponse) SetBaseManaRegen(v int32) {
	o.BaseManaRegen = &v
}

// GetBaseArmor returns the BaseArmor field value if set, zero value otherwise.
func (o *HeroStatsResponse) GetBaseArmor() int32 {
	if o == nil || IsNil(o.BaseArmor) {
		var ret int32
		return ret
	}
	return *o.BaseArmor
}

// GetBaseArmorOk returns a tuple with the BaseArmor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroStatsResponse) GetBaseArmorOk() (*int32, bool) {
	if o == nil || IsNil(o.BaseArmor) {
		return nil, false
	}
	return o.BaseArmor, true
}

// HasBaseArmor returns a boolean if a field has been set.
func (o *HeroStatsResponse) HasBaseArmor() bool {
	if o != nil && !IsNil(o.BaseArmor) {
		return true
	}

	return false
}

// SetBaseArmor gets a reference to the given int32 and assigns it to the BaseArmor field.
func (o *HeroStatsResponse) SetBaseArmor(v int32) {
	o.BaseArmor = &v
}

// GetBaseMr returns the BaseMr field value if set, zero value otherwise.
func (o *HeroStatsResponse) GetBaseMr() int32 {
	if o == nil || IsNil(o.BaseMr) {
		var ret int32
		return ret
	}
	return *o.BaseMr
}

// GetBaseMrOk returns a tuple with the BaseMr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroStatsResponse) GetBaseMrOk() (*int32, bool) {
	if o == nil || IsNil(o.BaseMr) {
		return nil, false
	}
	return o.BaseMr, true
}

// HasBaseMr returns a boolean if a field has been set.
func (o *HeroStatsResponse) HasBaseMr() bool {
	if o != nil && !IsNil(o.BaseMr) {
		return true
	}

	return false
}

// SetBaseMr gets a reference to the given int32 and assigns it to the BaseMr field.
func (o *HeroStatsResponse) SetBaseMr(v int32) {
	o.BaseMr = &v
}

// GetBaseAttackMin returns the BaseAttackMin field value if set, zero value otherwise.
func (o *HeroStatsResponse) GetBaseAttackMin() int32 {
	if o == nil || IsNil(o.BaseAttackMin) {
		var ret int32
		return ret
	}
	return *o.BaseAttackMin
}

// GetBaseAttackMinOk returns a tuple with the BaseAttackMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroStatsResponse) GetBaseAttackMinOk() (*int32, bool) {
	if o == nil || IsNil(o.BaseAttackMin) {
		return nil, false
	}
	return o.BaseAttackMin, true
}

// HasBaseAttackMin returns a boolean if a field has been set.
func (o *HeroStatsResponse) HasBaseAttackMin() bool {
	if o != nil && !IsNil(o.BaseAttackMin) {
		return true
	}

	return false
}

// SetBaseAttackMin gets a reference to the given int32 and assigns it to the BaseAttackMin field.
func (o *HeroStatsResponse) SetBaseAttackMin(v int32) {
	o.BaseAttackMin = &v
}

// GetBaseAttackMax returns the BaseAttackMax field value if set, zero value otherwise.
func (o *HeroStatsResponse) GetBaseAttackMax() int32 {
	if o == nil || IsNil(o.BaseAttackMax) {
		var ret int32
		return ret
	}
	return *o.BaseAttackMax
}

// GetBaseAttackMaxOk returns a tuple with the BaseAttackMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroStatsResponse) GetBaseAttackMaxOk() (*int32, bool) {
	if o == nil || IsNil(o.BaseAttackMax) {
		return nil, false
	}
	return o.BaseAttackMax, true
}

// HasBaseAttackMax returns a boolean if a field has been set.
func (o *HeroStatsResponse) HasBaseAttackMax() bool {
	if o != nil && !IsNil(o.BaseAttackMax) {
		return true
	}

	return false
}

// SetBaseAttackMax gets a reference to the given int32 and assigns it to the BaseAttackMax field.
func (o *HeroStatsResponse) SetBaseAttackMax(v int32) {
	o.BaseAttackMax = &v
}

// GetBaseStr returns the BaseStr field value if set, zero value otherwise.
func (o *HeroStatsResponse) GetBaseStr() int32 {
	if o == nil || IsNil(o.BaseStr) {
		var ret int32
		return ret
	}
	return *o.BaseStr
}

// GetBaseStrOk returns a tuple with the BaseStr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroStatsResponse) GetBaseStrOk() (*int32, bool) {
	if o == nil || IsNil(o.BaseStr) {
		return nil, false
	}
	return o.BaseStr, true
}

// HasBaseStr returns a boolean if a field has been set.
func (o *HeroStatsResponse) HasBaseStr() bool {
	if o != nil && !IsNil(o.BaseStr) {
		return true
	}

	return false
}

// SetBaseStr gets a reference to the given int32 and assigns it to the BaseStr field.
func (o *HeroStatsResponse) SetBaseStr(v int32) {
	o.BaseStr = &v
}

// GetBaseAgi returns the BaseAgi field value if set, zero value otherwise.
func (o *HeroStatsResponse) GetBaseAgi() int32 {
	if o == nil || IsNil(o.BaseAgi) {
		var ret int32
		return ret
	}
	return *o.BaseAgi
}

// GetBaseAgiOk returns a tuple with the BaseAgi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroStatsResponse) GetBaseAgiOk() (*int32, bool) {
	if o == nil || IsNil(o.BaseAgi) {
		return nil, false
	}
	return o.BaseAgi, true
}

// HasBaseAgi returns a boolean if a field has been set.
func (o *HeroStatsResponse) HasBaseAgi() bool {
	if o != nil && !IsNil(o.BaseAgi) {
		return true
	}

	return false
}

// SetBaseAgi gets a reference to the given int32 and assigns it to the BaseAgi field.
func (o *HeroStatsResponse) SetBaseAgi(v int32) {
	o.BaseAgi = &v
}

// GetBaseInt returns the BaseInt field value if set, zero value otherwise.
func (o *HeroStatsResponse) GetBaseInt() int32 {
	if o == nil || IsNil(o.BaseInt) {
		var ret int32
		return ret
	}
	return *o.BaseInt
}

// GetBaseIntOk returns a tuple with the BaseInt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroStatsResponse) GetBaseIntOk() (*int32, bool) {
	if o == nil || IsNil(o.BaseInt) {
		return nil, false
	}
	return o.BaseInt, true
}

// HasBaseInt returns a boolean if a field has been set.
func (o *HeroStatsResponse) HasBaseInt() bool {
	if o != nil && !IsNil(o.BaseInt) {
		return true
	}

	return false
}

// SetBaseInt gets a reference to the given int32 and assigns it to the BaseInt field.
func (o *HeroStatsResponse) SetBaseInt(v int32) {
	o.BaseInt = &v
}

// GetStrGain returns the StrGain field value if set, zero value otherwise.
func (o *HeroStatsResponse) GetStrGain() float32 {
	if o == nil || IsNil(o.StrGain) {
		var ret float32
		return ret
	}
	return *o.StrGain
}

// GetStrGainOk returns a tuple with the StrGain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroStatsResponse) GetStrGainOk() (*float32, bool) {
	if o == nil || IsNil(o.StrGain) {
		return nil, false
	}
	return o.StrGain, true
}

// HasStrGain returns a boolean if a field has been set.
func (o *HeroStatsResponse) HasStrGain() bool {
	if o != nil && !IsNil(o.StrGain) {
		return true
	}

	return false
}

// SetStrGain gets a reference to the given float32 and assigns it to the StrGain field.
func (o *HeroStatsResponse) SetStrGain(v float32) {
	o.StrGain = &v
}

// GetAgiGain returns the AgiGain field value if set, zero value otherwise.
func (o *HeroStatsResponse) GetAgiGain() float32 {
	if o == nil || IsNil(o.AgiGain) {
		var ret float32
		return ret
	}
	return *o.AgiGain
}

// GetAgiGainOk returns a tuple with the AgiGain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroStatsResponse) GetAgiGainOk() (*float32, bool) {
	if o == nil || IsNil(o.AgiGain) {
		return nil, false
	}
	return o.AgiGain, true
}

// HasAgiGain returns a boolean if a field has been set.
func (o *HeroStatsResponse) HasAgiGain() bool {
	if o != nil && !IsNil(o.AgiGain) {
		return true
	}

	return false
}

// SetAgiGain gets a reference to the given float32 and assigns it to the AgiGain field.
func (o *HeroStatsResponse) SetAgiGain(v float32) {
	o.AgiGain = &v
}

// GetIntGain returns the IntGain field value if set, zero value otherwise.
func (o *HeroStatsResponse) GetIntGain() float32 {
	if o == nil || IsNil(o.IntGain) {
		var ret float32
		return ret
	}
	return *o.IntGain
}

// GetIntGainOk returns a tuple with the IntGain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroStatsResponse) GetIntGainOk() (*float32, bool) {
	if o == nil || IsNil(o.IntGain) {
		return nil, false
	}
	return o.IntGain, true
}

// HasIntGain returns a boolean if a field has been set.
func (o *HeroStatsResponse) HasIntGain() bool {
	if o != nil && !IsNil(o.IntGain) {
		return true
	}

	return false
}

// SetIntGain gets a reference to the given float32 and assigns it to the IntGain field.
func (o *HeroStatsResponse) SetIntGain(v float32) {
	o.IntGain = &v
}

// GetAttackRange returns the AttackRange field value if set, zero value otherwise.
func (o *HeroStatsResponse) GetAttackRange() int32 {
	if o == nil || IsNil(o.AttackRange) {
		var ret int32
		return ret
	}
	return *o.AttackRange
}

// GetAttackRangeOk returns a tuple with the AttackRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroStatsResponse) GetAttackRangeOk() (*int32, bool) {
	if o == nil || IsNil(o.AttackRange) {
		return nil, false
	}
	return o.AttackRange, true
}

// HasAttackRange returns a boolean if a field has been set.
func (o *HeroStatsResponse) HasAttackRange() bool {
	if o != nil && !IsNil(o.AttackRange) {
		return true
	}

	return false
}

// SetAttackRange gets a reference to the given int32 and assigns it to the AttackRange field.
func (o *HeroStatsResponse) SetAttackRange(v int32) {
	o.AttackRange = &v
}

// GetProjectileSpeed returns the ProjectileSpeed field value if set, zero value otherwise.
func (o *HeroStatsResponse) GetProjectileSpeed() int32 {
	if o == nil || IsNil(o.ProjectileSpeed) {
		var ret int32
		return ret
	}
	return *o.ProjectileSpeed
}

// GetProjectileSpeedOk returns a tuple with the ProjectileSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroStatsResponse) GetProjectileSpeedOk() (*int32, bool) {
	if o == nil || IsNil(o.ProjectileSpeed) {
		return nil, false
	}
	return o.ProjectileSpeed, true
}

// HasProjectileSpeed returns a boolean if a field has been set.
func (o *HeroStatsResponse) HasProjectileSpeed() bool {
	if o != nil && !IsNil(o.ProjectileSpeed) {
		return true
	}

	return false
}

// SetProjectileSpeed gets a reference to the given int32 and assigns it to the ProjectileSpeed field.
func (o *HeroStatsResponse) SetProjectileSpeed(v int32) {
	o.ProjectileSpeed = &v
}

// GetAttackRate returns the AttackRate field value if set, zero value otherwise.
func (o *HeroStatsResponse) GetAttackRate() float32 {
	if o == nil || IsNil(o.AttackRate) {
		var ret float32
		return ret
	}
	return *o.AttackRate
}

// GetAttackRateOk returns a tuple with the AttackRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroStatsResponse) GetAttackRateOk() (*float32, bool) {
	if o == nil || IsNil(o.AttackRate) {
		return nil, false
	}
	return o.AttackRate, true
}

// HasAttackRate returns a boolean if a field has been set.
func (o *HeroStatsResponse) HasAttackRate() bool {
	if o != nil && !IsNil(o.AttackRate) {
		return true
	}

	return false
}

// SetAttackRate gets a reference to the given float32 and assigns it to the AttackRate field.
func (o *HeroStatsResponse) SetAttackRate(v float32) {
	o.AttackRate = &v
}

// GetBaseAttackTime returns the BaseAttackTime field value if set, zero value otherwise.
func (o *HeroStatsResponse) GetBaseAttackTime() int32 {
	if o == nil || IsNil(o.BaseAttackTime) {
		var ret int32
		return ret
	}
	return *o.BaseAttackTime
}

// GetBaseAttackTimeOk returns a tuple with the BaseAttackTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroStatsResponse) GetBaseAttackTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.BaseAttackTime) {
		return nil, false
	}
	return o.BaseAttackTime, true
}

// HasBaseAttackTime returns a boolean if a field has been set.
func (o *HeroStatsResponse) HasBaseAttackTime() bool {
	if o != nil && !IsNil(o.BaseAttackTime) {
		return true
	}

	return false
}

// SetBaseAttackTime gets a reference to the given int32 and assigns it to the BaseAttackTime field.
func (o *HeroStatsResponse) SetBaseAttackTime(v int32) {
	o.BaseAttackTime = &v
}

// GetAttackPoint returns the AttackPoint field value if set, zero value otherwise.
func (o *HeroStatsResponse) GetAttackPoint() float32 {
	if o == nil || IsNil(o.AttackPoint) {
		var ret float32
		return ret
	}
	return *o.AttackPoint
}

// GetAttackPointOk returns a tuple with the AttackPoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroStatsResponse) GetAttackPointOk() (*float32, bool) {
	if o == nil || IsNil(o.AttackPoint) {
		return nil, false
	}
	return o.AttackPoint, true
}

// HasAttackPoint returns a boolean if a field has been set.
func (o *HeroStatsResponse) HasAttackPoint() bool {
	if o != nil && !IsNil(o.AttackPoint) {
		return true
	}

	return false
}

// SetAttackPoint gets a reference to the given float32 and assigns it to the AttackPoint field.
func (o *HeroStatsResponse) SetAttackPoint(v float32) {
	o.AttackPoint = &v
}

// GetMoveSpeed returns the MoveSpeed field value if set, zero value otherwise.
func (o *HeroStatsResponse) GetMoveSpeed() int32 {
	if o == nil || IsNil(o.MoveSpeed) {
		var ret int32
		return ret
	}
	return *o.MoveSpeed
}

// GetMoveSpeedOk returns a tuple with the MoveSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroStatsResponse) GetMoveSpeedOk() (*int32, bool) {
	if o == nil || IsNil(o.MoveSpeed) {
		return nil, false
	}
	return o.MoveSpeed, true
}

// HasMoveSpeed returns a boolean if a field has been set.
func (o *HeroStatsResponse) HasMoveSpeed() bool {
	if o != nil && !IsNil(o.MoveSpeed) {
		return true
	}

	return false
}

// SetMoveSpeed gets a reference to the given int32 and assigns it to the MoveSpeed field.
func (o *HeroStatsResponse) SetMoveSpeed(v int32) {
	o.MoveSpeed = &v
}

// GetTurnRate returns the TurnRate field value if set, zero value otherwise.
func (o *HeroStatsResponse) GetTurnRate() float32 {
	if o == nil || IsNil(o.TurnRate) {
		var ret float32
		return ret
	}
	return *o.TurnRate
}

// GetTurnRateOk returns a tuple with the TurnRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroStatsResponse) GetTurnRateOk() (*float32, bool) {
	if o == nil || IsNil(o.TurnRate) {
		return nil, false
	}
	return o.TurnRate, true
}

// HasTurnRate returns a boolean if a field has been set.
func (o *HeroStatsResponse) HasTurnRate() bool {
	if o != nil && !IsNil(o.TurnRate) {
		return true
	}

	return false
}

// SetTurnRate gets a reference to the given float32 and assigns it to the TurnRate field.
func (o *HeroStatsResponse) SetTurnRate(v float32) {
	o.TurnRate = &v
}

// GetCmEnabled returns the CmEnabled field value if set, zero value otherwise.
func (o *HeroStatsResponse) GetCmEnabled() bool {
	if o == nil || IsNil(o.CmEnabled) {
		var ret bool
		return ret
	}
	return *o.CmEnabled
}

// GetCmEnabledOk returns a tuple with the CmEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroStatsResponse) GetCmEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.CmEnabled) {
		return nil, false
	}
	return o.CmEnabled, true
}

// HasCmEnabled returns a boolean if a field has been set.
func (o *HeroStatsResponse) HasCmEnabled() bool {
	if o != nil && !IsNil(o.CmEnabled) {
		return true
	}

	return false
}

// SetCmEnabled gets a reference to the given bool and assigns it to the CmEnabled field.
func (o *HeroStatsResponse) SetCmEnabled(v bool) {
	o.CmEnabled = &v
}

// GetLegs returns the Legs field value if set, zero value otherwise.
func (o *HeroStatsResponse) GetLegs() int32 {
	if o == nil || IsNil(o.Legs) {
		var ret int32
		return ret
	}
	return *o.Legs
}

// GetLegsOk returns a tuple with the Legs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroStatsResponse) GetLegsOk() (*int32, bool) {
	if o == nil || IsNil(o.Legs) {
		return nil, false
	}
	return o.Legs, true
}

// HasLegs returns a boolean if a field has been set.
func (o *HeroStatsResponse) HasLegs() bool {
	if o != nil && !IsNil(o.Legs) {
		return true
	}

	return false
}

// SetLegs gets a reference to the given int32 and assigns it to the Legs field.
func (o *HeroStatsResponse) SetLegs(v int32) {
	o.Legs = &v
}

// GetDayVision returns the DayVision field value if set, zero value otherwise.
func (o *HeroStatsResponse) GetDayVision() int32 {
	if o == nil || IsNil(o.DayVision) {
		var ret int32
		return ret
	}
	return *o.DayVision
}

// GetDayVisionOk returns a tuple with the DayVision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroStatsResponse) GetDayVisionOk() (*int32, bool) {
	if o == nil || IsNil(o.DayVision) {
		return nil, false
	}
	return o.DayVision, true
}

// HasDayVision returns a boolean if a field has been set.
func (o *HeroStatsResponse) HasDayVision() bool {
	if o != nil && !IsNil(o.DayVision) {
		return true
	}

	return false
}

// SetDayVision gets a reference to the given int32 and assigns it to the DayVision field.
func (o *HeroStatsResponse) SetDayVision(v int32) {
	o.DayVision = &v
}

// GetNightVision returns the NightVision field value if set, zero value otherwise.
func (o *HeroStatsResponse) GetNightVision() int32 {
	if o == nil || IsNil(o.NightVision) {
		var ret int32
		return ret
	}
	return *o.NightVision
}

// GetNightVisionOk returns a tuple with the NightVision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroStatsResponse) GetNightVisionOk() (*int32, bool) {
	if o == nil || IsNil(o.NightVision) {
		return nil, false
	}
	return o.NightVision, true
}

// HasNightVision returns a boolean if a field has been set.
func (o *HeroStatsResponse) HasNightVision() bool {
	if o != nil && !IsNil(o.NightVision) {
		return true
	}

	return false
}

// SetNightVision gets a reference to the given int32 and assigns it to the NightVision field.
func (o *HeroStatsResponse) SetNightVision(v int32) {
	o.NightVision = &v
}

// GetHeroId returns the HeroId field value if set, zero value otherwise.
func (o *HeroStatsResponse) GetHeroId() int32 {
	if o == nil || IsNil(o.HeroId) {
		var ret int32
		return ret
	}
	return *o.HeroId
}

// GetHeroIdOk returns a tuple with the HeroId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroStatsResponse) GetHeroIdOk() (*int32, bool) {
	if o == nil || IsNil(o.HeroId) {
		return nil, false
	}
	return o.HeroId, true
}

// HasHeroId returns a boolean if a field has been set.
func (o *HeroStatsResponse) HasHeroId() bool {
	if o != nil && !IsNil(o.HeroId) {
		return true
	}

	return false
}

// SetHeroId gets a reference to the given int32 and assigns it to the HeroId field.
func (o *HeroStatsResponse) SetHeroId(v int32) {
	o.HeroId = &v
}

// GetTurboPicks returns the TurboPicks field value if set, zero value otherwise.
func (o *HeroStatsResponse) GetTurboPicks() int32 {
	if o == nil || IsNil(o.TurboPicks) {
		var ret int32
		return ret
	}
	return *o.TurboPicks
}

// GetTurboPicksOk returns a tuple with the TurboPicks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroStatsResponse) GetTurboPicksOk() (*int32, bool) {
	if o == nil || IsNil(o.TurboPicks) {
		return nil, false
	}
	return o.TurboPicks, true
}

// HasTurboPicks returns a boolean if a field has been set.
func (o *HeroStatsResponse) HasTurboPicks() bool {
	if o != nil && !IsNil(o.TurboPicks) {
		return true
	}

	return false
}

// SetTurboPicks gets a reference to the given int32 and assigns it to the TurboPicks field.
func (o *HeroStatsResponse) SetTurboPicks(v int32) {
	o.TurboPicks = &v
}

// GetTurboWins returns the TurboWins field value if set, zero value otherwise.
func (o *HeroStatsResponse) GetTurboWins() int32 {
	if o == nil || IsNil(o.TurboWins) {
		var ret int32
		return ret
	}
	return *o.TurboWins
}

// GetTurboWinsOk returns a tuple with the TurboWins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroStatsResponse) GetTurboWinsOk() (*int32, bool) {
	if o == nil || IsNil(o.TurboWins) {
		return nil, false
	}
	return o.TurboWins, true
}

// HasTurboWins returns a boolean if a field has been set.
func (o *HeroStatsResponse) HasTurboWins() bool {
	if o != nil && !IsNil(o.TurboWins) {
		return true
	}

	return false
}

// SetTurboWins gets a reference to the given int32 and assigns it to the TurboWins field.
func (o *HeroStatsResponse) SetTurboWins(v int32) {
	o.TurboWins = &v
}

// GetProBan returns the ProBan field value if set, zero value otherwise.
func (o *HeroStatsResponse) GetProBan() int32 {
	if o == nil || IsNil(o.ProBan) {
		var ret int32
		return ret
	}
	return *o.ProBan
}

// GetProBanOk returns a tuple with the ProBan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroStatsResponse) GetProBanOk() (*int32, bool) {
	if o == nil || IsNil(o.ProBan) {
		return nil, false
	}
	return o.ProBan, true
}

// HasProBan returns a boolean if a field has been set.
func (o *HeroStatsResponse) HasProBan() bool {
	if o != nil && !IsNil(o.ProBan) {
		return true
	}

	return false
}

// SetProBan gets a reference to the given int32 and assigns it to the ProBan field.
func (o *HeroStatsResponse) SetProBan(v int32) {
	o.ProBan = &v
}

// GetProWin returns the ProWin field value if set, zero value otherwise.
func (o *HeroStatsResponse) GetProWin() int32 {
	if o == nil || IsNil(o.ProWin) {
		var ret int32
		return ret
	}
	return *o.ProWin
}

// GetProWinOk returns a tuple with the ProWin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroStatsResponse) GetProWinOk() (*int32, bool) {
	if o == nil || IsNil(o.ProWin) {
		return nil, false
	}
	return o.ProWin, true
}

// HasProWin returns a boolean if a field has been set.
func (o *HeroStatsResponse) HasProWin() bool {
	if o != nil && !IsNil(o.ProWin) {
		return true
	}

	return false
}

// SetProWin gets a reference to the given int32 and assigns it to the ProWin field.
func (o *HeroStatsResponse) SetProWin(v int32) {
	o.ProWin = &v
}

// GetProPick returns the ProPick field value if set, zero value otherwise.
func (o *HeroStatsResponse) GetProPick() int32 {
	if o == nil || IsNil(o.ProPick) {
		var ret int32
		return ret
	}
	return *o.ProPick
}

// GetProPickOk returns a tuple with the ProPick field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroStatsResponse) GetProPickOk() (*int32, bool) {
	if o == nil || IsNil(o.ProPick) {
		return nil, false
	}
	return o.ProPick, true
}

// HasProPick returns a boolean if a field has been set.
func (o *HeroStatsResponse) HasProPick() bool {
	if o != nil && !IsNil(o.ProPick) {
		return true
	}

	return false
}

// SetProPick gets a reference to the given int32 and assigns it to the ProPick field.
func (o *HeroStatsResponse) SetProPick(v int32) {
	o.ProPick = &v
}

// GetVar1Pick returns the Var1Pick field value if set, zero value otherwise.
func (o *HeroStatsResponse) GetVar1Pick() int32 {
	if o == nil || IsNil(o.Var1Pick) {
		var ret int32
		return ret
	}
	return *o.Var1Pick
}

// GetVar1PickOk returns a tuple with the Var1Pick field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroStatsResponse) GetVar1PickOk() (*int32, bool) {
	if o == nil || IsNil(o.Var1Pick) {
		return nil, false
	}
	return o.Var1Pick, true
}

// HasVar1Pick returns a boolean if a field has been set.
func (o *HeroStatsResponse) HasVar1Pick() bool {
	if o != nil && !IsNil(o.Var1Pick) {
		return true
	}

	return false
}

// SetVar1Pick gets a reference to the given int32 and assigns it to the Var1Pick field.
func (o *HeroStatsResponse) SetVar1Pick(v int32) {
	o.Var1Pick = &v
}

// GetVar1Win returns the Var1Win field value if set, zero value otherwise.
func (o *HeroStatsResponse) GetVar1Win() int32 {
	if o == nil || IsNil(o.Var1Win) {
		var ret int32
		return ret
	}
	return *o.Var1Win
}

// GetVar1WinOk returns a tuple with the Var1Win field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroStatsResponse) GetVar1WinOk() (*int32, bool) {
	if o == nil || IsNil(o.Var1Win) {
		return nil, false
	}
	return o.Var1Win, true
}

// HasVar1Win returns a boolean if a field has been set.
func (o *HeroStatsResponse) HasVar1Win() bool {
	if o != nil && !IsNil(o.Var1Win) {
		return true
	}

	return false
}

// SetVar1Win gets a reference to the given int32 and assigns it to the Var1Win field.
func (o *HeroStatsResponse) SetVar1Win(v int32) {
	o.Var1Win = &v
}

// GetVar2Pick returns the Var2Pick field value if set, zero value otherwise.
func (o *HeroStatsResponse) GetVar2Pick() int32 {
	if o == nil || IsNil(o.Var2Pick) {
		var ret int32
		return ret
	}
	return *o.Var2Pick
}

// GetVar2PickOk returns a tuple with the Var2Pick field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroStatsResponse) GetVar2PickOk() (*int32, bool) {
	if o == nil || IsNil(o.Var2Pick) {
		return nil, false
	}
	return o.Var2Pick, true
}

// HasVar2Pick returns a boolean if a field has been set.
func (o *HeroStatsResponse) HasVar2Pick() bool {
	if o != nil && !IsNil(o.Var2Pick) {
		return true
	}

	return false
}

// SetVar2Pick gets a reference to the given int32 and assigns it to the Var2Pick field.
func (o *HeroStatsResponse) SetVar2Pick(v int32) {
	o.Var2Pick = &v
}

// GetVar2Win returns the Var2Win field value if set, zero value otherwise.
func (o *HeroStatsResponse) GetVar2Win() int32 {
	if o == nil || IsNil(o.Var2Win) {
		var ret int32
		return ret
	}
	return *o.Var2Win
}

// GetVar2WinOk returns a tuple with the Var2Win field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroStatsResponse) GetVar2WinOk() (*int32, bool) {
	if o == nil || IsNil(o.Var2Win) {
		return nil, false
	}
	return o.Var2Win, true
}

// HasVar2Win returns a boolean if a field has been set.
func (o *HeroStatsResponse) HasVar2Win() bool {
	if o != nil && !IsNil(o.Var2Win) {
		return true
	}

	return false
}

// SetVar2Win gets a reference to the given int32 and assigns it to the Var2Win field.
func (o *HeroStatsResponse) SetVar2Win(v int32) {
	o.Var2Win = &v
}

// GetVar3Pick returns the Var3Pick field value if set, zero value otherwise.
func (o *HeroStatsResponse) GetVar3Pick() int32 {
	if o == nil || IsNil(o.Var3Pick) {
		var ret int32
		return ret
	}
	return *o.Var3Pick
}

// GetVar3PickOk returns a tuple with the Var3Pick field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroStatsResponse) GetVar3PickOk() (*int32, bool) {
	if o == nil || IsNil(o.Var3Pick) {
		return nil, false
	}
	return o.Var3Pick, true
}

// HasVar3Pick returns a boolean if a field has been set.
func (o *HeroStatsResponse) HasVar3Pick() bool {
	if o != nil && !IsNil(o.Var3Pick) {
		return true
	}

	return false
}

// SetVar3Pick gets a reference to the given int32 and assigns it to the Var3Pick field.
func (o *HeroStatsResponse) SetVar3Pick(v int32) {
	o.Var3Pick = &v
}

// GetVar3Win returns the Var3Win field value if set, zero value otherwise.
func (o *HeroStatsResponse) GetVar3Win() int32 {
	if o == nil || IsNil(o.Var3Win) {
		var ret int32
		return ret
	}
	return *o.Var3Win
}

// GetVar3WinOk returns a tuple with the Var3Win field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroStatsResponse) GetVar3WinOk() (*int32, bool) {
	if o == nil || IsNil(o.Var3Win) {
		return nil, false
	}
	return o.Var3Win, true
}

// HasVar3Win returns a boolean if a field has been set.
func (o *HeroStatsResponse) HasVar3Win() bool {
	if o != nil && !IsNil(o.Var3Win) {
		return true
	}

	return false
}

// SetVar3Win gets a reference to the given int32 and assigns it to the Var3Win field.
func (o *HeroStatsResponse) SetVar3Win(v int32) {
	o.Var3Win = &v
}

// GetVar4Pick returns the Var4Pick field value if set, zero value otherwise.
func (o *HeroStatsResponse) GetVar4Pick() int32 {
	if o == nil || IsNil(o.Var4Pick) {
		var ret int32
		return ret
	}
	return *o.Var4Pick
}

// GetVar4PickOk returns a tuple with the Var4Pick field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroStatsResponse) GetVar4PickOk() (*int32, bool) {
	if o == nil || IsNil(o.Var4Pick) {
		return nil, false
	}
	return o.Var4Pick, true
}

// HasVar4Pick returns a boolean if a field has been set.
func (o *HeroStatsResponse) HasVar4Pick() bool {
	if o != nil && !IsNil(o.Var4Pick) {
		return true
	}

	return false
}

// SetVar4Pick gets a reference to the given int32 and assigns it to the Var4Pick field.
func (o *HeroStatsResponse) SetVar4Pick(v int32) {
	o.Var4Pick = &v
}

// GetVar4Win returns the Var4Win field value if set, zero value otherwise.
func (o *HeroStatsResponse) GetVar4Win() int32 {
	if o == nil || IsNil(o.Var4Win) {
		var ret int32
		return ret
	}
	return *o.Var4Win
}

// GetVar4WinOk returns a tuple with the Var4Win field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroStatsResponse) GetVar4WinOk() (*int32, bool) {
	if o == nil || IsNil(o.Var4Win) {
		return nil, false
	}
	return o.Var4Win, true
}

// HasVar4Win returns a boolean if a field has been set.
func (o *HeroStatsResponse) HasVar4Win() bool {
	if o != nil && !IsNil(o.Var4Win) {
		return true
	}

	return false
}

// SetVar4Win gets a reference to the given int32 and assigns it to the Var4Win field.
func (o *HeroStatsResponse) SetVar4Win(v int32) {
	o.Var4Win = &v
}

// GetVar5Pick returns the Var5Pick field value if set, zero value otherwise.
func (o *HeroStatsResponse) GetVar5Pick() int32 {
	if o == nil || IsNil(o.Var5Pick) {
		var ret int32
		return ret
	}
	return *o.Var5Pick
}

// GetVar5PickOk returns a tuple with the Var5Pick field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroStatsResponse) GetVar5PickOk() (*int32, bool) {
	if o == nil || IsNil(o.Var5Pick) {
		return nil, false
	}
	return o.Var5Pick, true
}

// HasVar5Pick returns a boolean if a field has been set.
func (o *HeroStatsResponse) HasVar5Pick() bool {
	if o != nil && !IsNil(o.Var5Pick) {
		return true
	}

	return false
}

// SetVar5Pick gets a reference to the given int32 and assigns it to the Var5Pick field.
func (o *HeroStatsResponse) SetVar5Pick(v int32) {
	o.Var5Pick = &v
}

// GetVar5Win returns the Var5Win field value if set, zero value otherwise.
func (o *HeroStatsResponse) GetVar5Win() int32 {
	if o == nil || IsNil(o.Var5Win) {
		var ret int32
		return ret
	}
	return *o.Var5Win
}

// GetVar5WinOk returns a tuple with the Var5Win field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroStatsResponse) GetVar5WinOk() (*int32, bool) {
	if o == nil || IsNil(o.Var5Win) {
		return nil, false
	}
	return o.Var5Win, true
}

// HasVar5Win returns a boolean if a field has been set.
func (o *HeroStatsResponse) HasVar5Win() bool {
	if o != nil && !IsNil(o.Var5Win) {
		return true
	}

	return false
}

// SetVar5Win gets a reference to the given int32 and assigns it to the Var5Win field.
func (o *HeroStatsResponse) SetVar5Win(v int32) {
	o.Var5Win = &v
}

// GetVar6Pick returns the Var6Pick field value if set, zero value otherwise.
func (o *HeroStatsResponse) GetVar6Pick() int32 {
	if o == nil || IsNil(o.Var6Pick) {
		var ret int32
		return ret
	}
	return *o.Var6Pick
}

// GetVar6PickOk returns a tuple with the Var6Pick field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroStatsResponse) GetVar6PickOk() (*int32, bool) {
	if o == nil || IsNil(o.Var6Pick) {
		return nil, false
	}
	return o.Var6Pick, true
}

// HasVar6Pick returns a boolean if a field has been set.
func (o *HeroStatsResponse) HasVar6Pick() bool {
	if o != nil && !IsNil(o.Var6Pick) {
		return true
	}

	return false
}

// SetVar6Pick gets a reference to the given int32 and assigns it to the Var6Pick field.
func (o *HeroStatsResponse) SetVar6Pick(v int32) {
	o.Var6Pick = &v
}

// GetVar6Win returns the Var6Win field value if set, zero value otherwise.
func (o *HeroStatsResponse) GetVar6Win() int32 {
	if o == nil || IsNil(o.Var6Win) {
		var ret int32
		return ret
	}
	return *o.Var6Win
}

// GetVar6WinOk returns a tuple with the Var6Win field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroStatsResponse) GetVar6WinOk() (*int32, bool) {
	if o == nil || IsNil(o.Var6Win) {
		return nil, false
	}
	return o.Var6Win, true
}

// HasVar6Win returns a boolean if a field has been set.
func (o *HeroStatsResponse) HasVar6Win() bool {
	if o != nil && !IsNil(o.Var6Win) {
		return true
	}

	return false
}

// SetVar6Win gets a reference to the given int32 and assigns it to the Var6Win field.
func (o *HeroStatsResponse) SetVar6Win(v int32) {
	o.Var6Win = &v
}

// GetVar7Pick returns the Var7Pick field value if set, zero value otherwise.
func (o *HeroStatsResponse) GetVar7Pick() int32 {
	if o == nil || IsNil(o.Var7Pick) {
		var ret int32
		return ret
	}
	return *o.Var7Pick
}

// GetVar7PickOk returns a tuple with the Var7Pick field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroStatsResponse) GetVar7PickOk() (*int32, bool) {
	if o == nil || IsNil(o.Var7Pick) {
		return nil, false
	}
	return o.Var7Pick, true
}

// HasVar7Pick returns a boolean if a field has been set.
func (o *HeroStatsResponse) HasVar7Pick() bool {
	if o != nil && !IsNil(o.Var7Pick) {
		return true
	}

	return false
}

// SetVar7Pick gets a reference to the given int32 and assigns it to the Var7Pick field.
func (o *HeroStatsResponse) SetVar7Pick(v int32) {
	o.Var7Pick = &v
}

// GetVar7Win returns the Var7Win field value if set, zero value otherwise.
func (o *HeroStatsResponse) GetVar7Win() int32 {
	if o == nil || IsNil(o.Var7Win) {
		var ret int32
		return ret
	}
	return *o.Var7Win
}

// GetVar7WinOk returns a tuple with the Var7Win field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroStatsResponse) GetVar7WinOk() (*int32, bool) {
	if o == nil || IsNil(o.Var7Win) {
		return nil, false
	}
	return o.Var7Win, true
}

// HasVar7Win returns a boolean if a field has been set.
func (o *HeroStatsResponse) HasVar7Win() bool {
	if o != nil && !IsNil(o.Var7Win) {
		return true
	}

	return false
}

// SetVar7Win gets a reference to the given int32 and assigns it to the Var7Win field.
func (o *HeroStatsResponse) SetVar7Win(v int32) {
	o.Var7Win = &v
}

// GetVar8Pick returns the Var8Pick field value if set, zero value otherwise.
func (o *HeroStatsResponse) GetVar8Pick() int32 {
	if o == nil || IsNil(o.Var8Pick) {
		var ret int32
		return ret
	}
	return *o.Var8Pick
}

// GetVar8PickOk returns a tuple with the Var8Pick field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroStatsResponse) GetVar8PickOk() (*int32, bool) {
	if o == nil || IsNil(o.Var8Pick) {
		return nil, false
	}
	return o.Var8Pick, true
}

// HasVar8Pick returns a boolean if a field has been set.
func (o *HeroStatsResponse) HasVar8Pick() bool {
	if o != nil && !IsNil(o.Var8Pick) {
		return true
	}

	return false
}

// SetVar8Pick gets a reference to the given int32 and assigns it to the Var8Pick field.
func (o *HeroStatsResponse) SetVar8Pick(v int32) {
	o.Var8Pick = &v
}

// GetVar8Win returns the Var8Win field value if set, zero value otherwise.
func (o *HeroStatsResponse) GetVar8Win() int32 {
	if o == nil || IsNil(o.Var8Win) {
		var ret int32
		return ret
	}
	return *o.Var8Win
}

// GetVar8WinOk returns a tuple with the Var8Win field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeroStatsResponse) GetVar8WinOk() (*int32, bool) {
	if o == nil || IsNil(o.Var8Win) {
		return nil, false
	}
	return o.Var8Win, true
}

// HasVar8Win returns a boolean if a field has been set.
func (o *HeroStatsResponse) HasVar8Win() bool {
	if o != nil && !IsNil(o.Var8Win) {
		return true
	}

	return false
}

// SetVar8Win gets a reference to the given int32 and assigns it to the Var8Win field.
func (o *HeroStatsResponse) SetVar8Win(v int32) {
	o.Var8Win = &v
}

func (o HeroStatsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HeroStatsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.LocalizedName) {
		toSerialize["localized_name"] = o.LocalizedName
	}
	if !IsNil(o.PrimaryAttr) {
		toSerialize["primary_attr"] = o.PrimaryAttr
	}
	if !IsNil(o.AttackType) {
		toSerialize["attack_type"] = o.AttackType
	}
	if !IsNil(o.Roles) {
		toSerialize["roles"] = o.Roles
	}
	if !IsNil(o.Img) {
		toSerialize["img"] = o.Img
	}
	if !IsNil(o.Icon) {
		toSerialize["icon"] = o.Icon
	}
	if !IsNil(o.BaseHealth) {
		toSerialize["base_health"] = o.BaseHealth
	}
	if !IsNil(o.BaseHealthRegen) {
		toSerialize["base_health_regen"] = o.BaseHealthRegen
	}
	if !IsNil(o.BaseMana) {
		toSerialize["base_mana"] = o.BaseMana
	}
	if !IsNil(o.BaseManaRegen) {
		toSerialize["base_mana_regen"] = o.BaseManaRegen
	}
	if !IsNil(o.BaseArmor) {
		toSerialize["base_armor"] = o.BaseArmor
	}
	if !IsNil(o.BaseMr) {
		toSerialize["base_mr"] = o.BaseMr
	}
	if !IsNil(o.BaseAttackMin) {
		toSerialize["base_attack_min"] = o.BaseAttackMin
	}
	if !IsNil(o.BaseAttackMax) {
		toSerialize["base_attack_max"] = o.BaseAttackMax
	}
	if !IsNil(o.BaseStr) {
		toSerialize["base_str"] = o.BaseStr
	}
	if !IsNil(o.BaseAgi) {
		toSerialize["base_agi"] = o.BaseAgi
	}
	if !IsNil(o.BaseInt) {
		toSerialize["base_int"] = o.BaseInt
	}
	if !IsNil(o.StrGain) {
		toSerialize["str_gain"] = o.StrGain
	}
	if !IsNil(o.AgiGain) {
		toSerialize["agi_gain"] = o.AgiGain
	}
	if !IsNil(o.IntGain) {
		toSerialize["int_gain"] = o.IntGain
	}
	if !IsNil(o.AttackRange) {
		toSerialize["attack_range"] = o.AttackRange
	}
	if !IsNil(o.ProjectileSpeed) {
		toSerialize["projectile_speed"] = o.ProjectileSpeed
	}
	if !IsNil(o.AttackRate) {
		toSerialize["attack_rate"] = o.AttackRate
	}
	if !IsNil(o.BaseAttackTime) {
		toSerialize["base_attack_time"] = o.BaseAttackTime
	}
	if !IsNil(o.AttackPoint) {
		toSerialize["attack_point"] = o.AttackPoint
	}
	if !IsNil(o.MoveSpeed) {
		toSerialize["move_speed"] = o.MoveSpeed
	}
	if !IsNil(o.TurnRate) {
		toSerialize["turn_rate"] = o.TurnRate
	}
	if !IsNil(o.CmEnabled) {
		toSerialize["cm_enabled"] = o.CmEnabled
	}
	if !IsNil(o.Legs) {
		toSerialize["legs"] = o.Legs
	}
	if !IsNil(o.DayVision) {
		toSerialize["day_vision"] = o.DayVision
	}
	if !IsNil(o.NightVision) {
		toSerialize["night_vision"] = o.NightVision
	}
	if !IsNil(o.HeroId) {
		toSerialize["hero_id"] = o.HeroId
	}
	if !IsNil(o.TurboPicks) {
		toSerialize["turbo_picks"] = o.TurboPicks
	}
	if !IsNil(o.TurboWins) {
		toSerialize["turbo_wins"] = o.TurboWins
	}
	if !IsNil(o.ProBan) {
		toSerialize["pro_ban"] = o.ProBan
	}
	if !IsNil(o.ProWin) {
		toSerialize["pro_win"] = o.ProWin
	}
	if !IsNil(o.ProPick) {
		toSerialize["pro_pick"] = o.ProPick
	}
	if !IsNil(o.Var1Pick) {
		toSerialize["1_pick"] = o.Var1Pick
	}
	if !IsNil(o.Var1Win) {
		toSerialize["1_win"] = o.Var1Win
	}
	if !IsNil(o.Var2Pick) {
		toSerialize["2_pick"] = o.Var2Pick
	}
	if !IsNil(o.Var2Win) {
		toSerialize["2_win"] = o.Var2Win
	}
	if !IsNil(o.Var3Pick) {
		toSerialize["3_pick"] = o.Var3Pick
	}
	if !IsNil(o.Var3Win) {
		toSerialize["3_win"] = o.Var3Win
	}
	if !IsNil(o.Var4Pick) {
		toSerialize["4_pick"] = o.Var4Pick
	}
	if !IsNil(o.Var4Win) {
		toSerialize["4_win"] = o.Var4Win
	}
	if !IsNil(o.Var5Pick) {
		toSerialize["5_pick"] = o.Var5Pick
	}
	if !IsNil(o.Var5Win) {
		toSerialize["5_win"] = o.Var5Win
	}
	if !IsNil(o.Var6Pick) {
		toSerialize["6_pick"] = o.Var6Pick
	}
	if !IsNil(o.Var6Win) {
		toSerialize["6_win"] = o.Var6Win
	}
	if !IsNil(o.Var7Pick) {
		toSerialize["7_pick"] = o.Var7Pick
	}
	if !IsNil(o.Var7Win) {
		toSerialize["7_win"] = o.Var7Win
	}
	if !IsNil(o.Var8Pick) {
		toSerialize["8_pick"] = o.Var8Pick
	}
	if !IsNil(o.Var8Win) {
		toSerialize["8_win"] = o.Var8Win
	}
	return toSerialize, nil
}

type NullableHeroStatsResponse struct {
	value *HeroStatsResponse
	isSet bool
}

func (v NullableHeroStatsResponse) Get() *HeroStatsResponse {
	return v.value
}

func (v *NullableHeroStatsResponse) Set(val *HeroStatsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableHeroStatsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableHeroStatsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHeroStatsResponse(val *HeroStatsResponse) *NullableHeroStatsResponse {
	return &NullableHeroStatsResponse{value: val, isSet: true}
}

func (v NullableHeroStatsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHeroStatsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


